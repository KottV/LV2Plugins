// (c) 2019 Takamitsu Endo
//
// This file is part of IterativeSinCluster.
//
// IterativeSinCluster is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// IterativeSinCluster is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with IterativeSinCluster.  If not, see <https://www.gnu.org/licenses/>.

#include "parameter.hpp"
#include "dsp/constants.hpp"

using namespace SomeDSP;

IntScale<double> Scales::boolScale(1);
LinearScale<double> Scales::defaultScale(0.0, 1.0);

LinearScale<double> Scales::masterOctave(-4.0, 4.0);
LinearScale<double> Scales::equalTemperament(1.0, 60.0);
LinearScale<double> Scales::pitchMultiply(0.0, 4.0);
LinearScale<double> Scales::pitchModulo(0.0, 60.0);

IntScale<double> Scales::seed(16777215); // 2^24 - 1
LogScale<double> Scales::randomAmount(0.0, 1.0, 0.5, 0.1);

SPolyScale<double> Scales::chorusFrequency(-40.0, 40.0, 0.6);
LogScale<double> Scales::chorusDelayTimeRange(0.00003, 0.001, 0.5, 0.0001);
LogScale<double> Scales::chorusMinDelayTime(0, 0.01, 0.5, 0.001);
LinearScale<double> Scales::chorusPhase(0, twopi);
LinearScale<double> Scales::chorusOffset(0, twopi / 3.0);

IntScale<double> Scales::oscSemi(120);
IntScale<double> Scales::oscMilli(1000);
IntScale<double> Scales::oscOctave(8);

LogScale<double> Scales::gain(0.0, 4.0, 0.5, 1.0);
LinearScale<double> Scales::gainBoost(1.0, 16.0);
DecibelScale<double> Scales::gainDecibel(-40.0, 0.0, true);

LinearScale<double> Scales::shelvingPitch(0.0, 60.0);
DecibelScale<double> Scales::shelvingGain(-30.0, 30.0, true);

LogScale<double> Scales::envelopeA(0.0001, 16.0, 0.5, 2.0);
LogScale<double> Scales::envelopeD(0.0001, 16.0, 0.5, 4.0);
LogScale<double> Scales::envelopeS(0.0, 0.9995, 0.5, 0.3);
LogScale<double> Scales::envelopeR(0.001, 16.0, 0.5, 2.0);

IntScale<double> Scales::nVoice(5);
LogScale<double> Scales::smoothness(0.0, 0.5, 0.1, 0.04);

// Generated from preset dump. This works, but hard coding preset data is seriously bad.
void GlobalParameter::loadProgram(uint32_t index)
{
  using ID = ParameterID::ID;

  switch (index) {
    default:
    case presetDefault:
      resetParameter();
      break;

    case presetMilliDetune: {
      value[ID::bypass]->setFromNormalized(0);
      value[ID::aliasing]->setFromNormalized(1.000000);
      value[ID::negativeSemi]->setFromNormalized(0.000000);
      value[ID::masterOctave]->setFromNormalized(0.284000);
      value[ID::equalTemperament]->setFromNormalized(0.010000);
      value[ID::pitchMultiply]->setFromNormalized(0.250000);
      value[ID::pitchModulo]->setFromNormalized(0.000000);
      value[ID::seed]->setFromNormalized(0.000000);
      value[ID::randomRetrigger]->setFromNormalized(0.000000);
      value[ID::randomGainAmount]->setFromNormalized(0.000000);
      value[ID::randomFrequencyAmount]->setFromNormalized(0.000000);
      value[ID::chorusMix]->setFromNormalized(0.000000);
      value[ID::chorusFrequency]->setFromNormalized(0.500000);
      value[ID::chorusDepth]->setFromNormalized(1.000000);
      value[ID::chorusDelayTimeRange0]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange1]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange2]->setFromNormalized(0.000000);
      value[ID::chorusMinDelayTime0]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime1]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime2]->setFromNormalized(0.500000);
      value[ID::chorusPhase]->setFromNormalized(0.000000);
      value[ID::chorusOffset]->setFromNormalized(0.000000);
      value[ID::chorusFeedback]->setFromNormalized(0.000000);
      value[ID::chorusKeyFollow]->setFromNormalized(1.000000);
      value[ID::gain]->setFromNormalized(0.500000);
      value[ID::gainBoost]->setFromNormalized(0.000000);
      value[ID::gainA]->setFromNormalized(0.000000);
      value[ID::gainD]->setFromNormalized(0.500000);
      value[ID::gainS]->setFromNormalized(1.000000);
      value[ID::gainR]->setFromNormalized(0.832000);
      value[ID::gainEnvelopeCurve]->setFromNormalized(0.000000);
      value[ID::lowShelfPitch]->setFromNormalized(0.000000);
      value[ID::lowShelfGain]->setFromNormalized(0.500000);
      value[ID::highShelfPitch]->setFromNormalized(0.000000);
      value[ID::highShelfGain]->setFromNormalized(0.500000);
      value[ID::gain0]->setFromNormalized(1.000000);
      value[ID::gain1]->setFromNormalized(1.000000);
      value[ID::gain2]->setFromNormalized(1.000000);
      value[ID::gain3]->setFromNormalized(1.000000);
      value[ID::gain4]->setFromNormalized(1.000000);
      value[ID::gain5]->setFromNormalized(1.000000);
      value[ID::gain6]->setFromNormalized(1.000000);
      value[ID::gain7]->setFromNormalized(1.000000);
      value[ID::semi0]->setFromNormalized(0.000000);
      value[ID::semi1]->setFromNormalized(0.000000);
      value[ID::semi2]->setFromNormalized(0.000000);
      value[ID::semi3]->setFromNormalized(0.000000);
      value[ID::semi4]->setFromNormalized(0.000000);
      value[ID::semi5]->setFromNormalized(0.000000);
      value[ID::semi6]->setFromNormalized(0.000000);
      value[ID::semi7]->setFromNormalized(0.000000);
      value[ID::milli0]->setFromNormalized(0.000000);
      value[ID::milli1]->setFromNormalized(0.001000);
      value[ID::milli2]->setFromNormalized(0.002000);
      value[ID::milli3]->setFromNormalized(0.003000);
      value[ID::milli4]->setFromNormalized(0.004000);
      value[ID::milli5]->setFromNormalized(0.005000);
      value[ID::milli6]->setFromNormalized(0.006000);
      value[ID::milli7]->setFromNormalized(0.007000);
      value[ID::overtone0]->setFromNormalized(1.000000);
      value[ID::overtone1]->setFromNormalized(0.400000);
      value[ID::overtone2]->setFromNormalized(0.442857);
      value[ID::overtone3]->setFromNormalized(0.500000);
      value[ID::overtone4]->setFromNormalized(0.571429);
      value[ID::overtone5]->setFromNormalized(0.671429);
      value[ID::overtone6]->setFromNormalized(0.728571);
      value[ID::overtone7]->setFromNormalized(0.778571);
      value[ID::overtone8]->setFromNormalized(0.821429);
      value[ID::overtone9]->setFromNormalized(0.864286);
      value[ID::overtone10]->setFromNormalized(0.928571);
      value[ID::overtone11]->setFromNormalized(1.000000);
      value[ID::overtone12]->setFromNormalized(1.000000);
      value[ID::overtone13]->setFromNormalized(1.000000);
      value[ID::overtone14]->setFromNormalized(1.000000);
      value[ID::overtone15]->setFromNormalized(1.000000);
      value[ID::chordGain0]->setFromNormalized(1.000000);
      value[ID::chordGain1]->setFromNormalized(1.000000);
      value[ID::chordGain2]->setFromNormalized(1.000000);
      value[ID::chordGain3]->setFromNormalized(1.000000);
      value[ID::chordSemi0]->setFromNormalized(0.000000);
      value[ID::chordSemi1]->setFromNormalized(0.016667);
      value[ID::chordSemi2]->setFromNormalized(0.033333);
      value[ID::chordSemi3]->setFromNormalized(0.050000);
      value[ID::chordMilli0]->setFromNormalized(0.000000);
      value[ID::chordMilli1]->setFromNormalized(0.008000);
      value[ID::chordMilli2]->setFromNormalized(0.016000);
      value[ID::chordMilli3]->setFromNormalized(0.024000);
      value[ID::chordPan0]->setFromNormalized(0.500000);
      value[ID::chordPan1]->setFromNormalized(0.500000);
      value[ID::chordPan2]->setFromNormalized(0.500000);
      value[ID::chordPan3]->setFromNormalized(0.500000);
      value[ID::nVoice]->setFromNormalized(1.000000);
      value[ID::smoothness]->setFromNormalized(0.100000);
      value[ID::pitchBend]->setFromNormalized(0.500000);
    } break;

    case preset35th: {
      value[ID::bypass]->setFromNormalized(0);
      value[ID::aliasing]->setFromNormalized(0.000000);
      value[ID::negativeSemi]->setFromNormalized(0.000000);
      value[ID::masterOctave]->setFromNormalized(0.500000);
      value[ID::equalTemperament]->setFromNormalized(0.186441);
      value[ID::pitchMultiply]->setFromNormalized(0.250000);
      value[ID::pitchModulo]->setFromNormalized(0.000000);
      value[ID::seed]->setFromNormalized(0.000000);
      value[ID::randomRetrigger]->setFromNormalized(0.000000);
      value[ID::randomGainAmount]->setFromNormalized(0.000000);
      value[ID::randomFrequencyAmount]->setFromNormalized(0.000000);
      value[ID::chorusMix]->setFromNormalized(0.000000);
      value[ID::chorusFrequency]->setFromNormalized(0.500000);
      value[ID::chorusDepth]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange0]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange1]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange2]->setFromNormalized(0.000000);
      value[ID::chorusMinDelayTime0]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime1]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime2]->setFromNormalized(0.500000);
      value[ID::chorusPhase]->setFromNormalized(0.000000);
      value[ID::chorusOffset]->setFromNormalized(0.000000);
      value[ID::chorusFeedback]->setFromNormalized(0.000000);
      value[ID::chorusKeyFollow]->setFromNormalized(1.000000);
      value[ID::gain]->setFromNormalized(0.500000);
      value[ID::gainBoost]->setFromNormalized(0.000000);
      value[ID::gainA]->setFromNormalized(0.000000);
      value[ID::gainD]->setFromNormalized(0.500000);
      value[ID::gainS]->setFromNormalized(0.500000);
      value[ID::gainR]->setFromNormalized(0.152000);
      value[ID::gainEnvelopeCurve]->setFromNormalized(0.000000);
      value[ID::lowShelfPitch]->setFromNormalized(0.000000);
      value[ID::lowShelfGain]->setFromNormalized(0.500000);
      value[ID::highShelfPitch]->setFromNormalized(0.000000);
      value[ID::highShelfGain]->setFromNormalized(0.500000);
      value[ID::gain0]->setFromNormalized(1.000000);
      value[ID::gain1]->setFromNormalized(1.000000);
      value[ID::gain2]->setFromNormalized(1.000000);
      value[ID::gain3]->setFromNormalized(1.000000);
      value[ID::gain4]->setFromNormalized(1.000000);
      value[ID::gain5]->setFromNormalized(1.000000);
      value[ID::gain6]->setFromNormalized(1.000000);
      value[ID::gain7]->setFromNormalized(1.000000);
      value[ID::semi0]->setFromNormalized(0.000000);
      value[ID::semi1]->setFromNormalized(0.041667);
      value[ID::semi2]->setFromNormalized(0.083333);
      value[ID::semi3]->setFromNormalized(0.125000);
      value[ID::semi4]->setFromNormalized(0.166667);
      value[ID::semi5]->setFromNormalized(0.208333);
      value[ID::semi6]->setFromNormalized(0.250000);
      value[ID::semi7]->setFromNormalized(0.291667);
      value[ID::milli0]->setFromNormalized(0.000000);
      value[ID::milli1]->setFromNormalized(0.000000);
      value[ID::milli2]->setFromNormalized(0.000000);
      value[ID::milli3]->setFromNormalized(0.000000);
      value[ID::milli4]->setFromNormalized(0.000000);
      value[ID::milli5]->setFromNormalized(0.000000);
      value[ID::milli6]->setFromNormalized(0.000000);
      value[ID::milli7]->setFromNormalized(0.000000);
      value[ID::overtone0]->setFromNormalized(1.000000);
      value[ID::overtone1]->setFromNormalized(0.849485);
      value[ID::overtone2]->setFromNormalized(0.761439);
      value[ID::overtone3]->setFromNormalized(0.698970);
      value[ID::overtone4]->setFromNormalized(0.650515);
      value[ID::overtone5]->setFromNormalized(0.610925);
      value[ID::overtone6]->setFromNormalized(0.577451);
      value[ID::overtone7]->setFromNormalized(0.548455);
      value[ID::overtone8]->setFromNormalized(0.522879);
      value[ID::overtone9]->setFromNormalized(0.500000);
      value[ID::overtone10]->setFromNormalized(0.479303);
      value[ID::overtone11]->setFromNormalized(0.460409);
      value[ID::overtone12]->setFromNormalized(0.443028);
      value[ID::overtone13]->setFromNormalized(0.426937);
      value[ID::overtone14]->setFromNormalized(0.411955);
      value[ID::overtone15]->setFromNormalized(0.397940);
      value[ID::chordGain0]->setFromNormalized(1.000000);
      value[ID::chordGain1]->setFromNormalized(1.000000);
      value[ID::chordGain2]->setFromNormalized(1.000000);
      value[ID::chordGain3]->setFromNormalized(1.000000);
      value[ID::chordSemi0]->setFromNormalized(0.000000);
      value[ID::chordSemi1]->setFromNormalized(0.100000);
      value[ID::chordSemi2]->setFromNormalized(0.100000);
      value[ID::chordSemi3]->setFromNormalized(0.000000);
      value[ID::chordMilli0]->setFromNormalized(0.000000);
      value[ID::chordMilli1]->setFromNormalized(0.160000);
      value[ID::chordMilli2]->setFromNormalized(0.000000);
      value[ID::chordMilli3]->setFromNormalized(0.156000);
      value[ID::chordPan0]->setFromNormalized(0.000000);
      value[ID::chordPan1]->setFromNormalized(0.000000);
      value[ID::chordPan2]->setFromNormalized(1.000000);
      value[ID::chordPan3]->setFromNormalized(1.000000);
      value[ID::nVoice]->setFromNormalized(1.000000);
      value[ID::smoothness]->setFromNormalized(0.100000);
      value[ID::pitchBend]->setFromNormalized(0.500000);
    } break;

    case presetOdd7th: {
      value[ID::bypass]->setFromNormalized(0);
      value[ID::aliasing]->setFromNormalized(0.000000);
      value[ID::negativeSemi]->setFromNormalized(0.000000);
      value[ID::masterOctave]->setFromNormalized(0.500000);
      value[ID::equalTemperament]->setFromNormalized(0.074441);
      value[ID::pitchMultiply]->setFromNormalized(0.250000);
      value[ID::pitchModulo]->setFromNormalized(0.000000);
      value[ID::seed]->setFromNormalized(0.000000);
      value[ID::randomRetrigger]->setFromNormalized(0.000000);
      value[ID::randomGainAmount]->setFromNormalized(0.000000);
      value[ID::randomFrequencyAmount]->setFromNormalized(0.000000);
      value[ID::chorusMix]->setFromNormalized(0.000000);
      value[ID::chorusFrequency]->setFromNormalized(0.500000);
      value[ID::chorusDepth]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange0]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange1]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange2]->setFromNormalized(0.000000);
      value[ID::chorusMinDelayTime0]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime1]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime2]->setFromNormalized(0.500000);
      value[ID::chorusPhase]->setFromNormalized(0.000000);
      value[ID::chorusOffset]->setFromNormalized(0.000000);
      value[ID::chorusFeedback]->setFromNormalized(0.000000);
      value[ID::chorusKeyFollow]->setFromNormalized(1.000000);
      value[ID::gain]->setFromNormalized(0.500000);
      value[ID::gainBoost]->setFromNormalized(0.000000);
      value[ID::gainA]->setFromNormalized(0.000000);
      value[ID::gainD]->setFromNormalized(0.500000);
      value[ID::gainS]->setFromNormalized(0.500000);
      value[ID::gainR]->setFromNormalized(0.000144);
      value[ID::gainEnvelopeCurve]->setFromNormalized(0.000000);
      value[ID::lowShelfPitch]->setFromNormalized(0.000000);
      value[ID::lowShelfGain]->setFromNormalized(0.500000);
      value[ID::highShelfPitch]->setFromNormalized(0.000000);
      value[ID::highShelfGain]->setFromNormalized(0.500000);
      value[ID::gain0]->setFromNormalized(1.000000);
      value[ID::gain1]->setFromNormalized(1.000000);
      value[ID::gain2]->setFromNormalized(1.000000);
      value[ID::gain3]->setFromNormalized(1.000000);
      value[ID::gain4]->setFromNormalized(1.000000);
      value[ID::gain5]->setFromNormalized(1.000000);
      value[ID::gain6]->setFromNormalized(1.000000);
      value[ID::gain7]->setFromNormalized(1.000000);
      value[ID::semi0]->setFromNormalized(0.000000);
      value[ID::semi1]->setFromNormalized(0.000000);
      value[ID::semi2]->setFromNormalized(0.000000);
      value[ID::semi3]->setFromNormalized(0.000000);
      value[ID::semi4]->setFromNormalized(0.000000);
      value[ID::semi5]->setFromNormalized(0.000000);
      value[ID::semi6]->setFromNormalized(0.000000);
      value[ID::semi7]->setFromNormalized(0.000000);
      value[ID::milli0]->setFromNormalized(0.000000);
      value[ID::milli1]->setFromNormalized(0.000000);
      value[ID::milli2]->setFromNormalized(0.000000);
      value[ID::milli3]->setFromNormalized(0.000000);
      value[ID::milli4]->setFromNormalized(0.000000);
      value[ID::milli5]->setFromNormalized(0.000000);
      value[ID::milli6]->setFromNormalized(0.000000);
      value[ID::milli7]->setFromNormalized(0.000000);
      value[ID::overtone0]->setFromNormalized(1.000000);
      value[ID::overtone1]->setFromNormalized(0.849485);
      value[ID::overtone2]->setFromNormalized(0.000000);
      value[ID::overtone3]->setFromNormalized(0.698970);
      value[ID::overtone4]->setFromNormalized(0.000000);
      value[ID::overtone5]->setFromNormalized(0.610924);
      value[ID::overtone6]->setFromNormalized(0.000000);
      value[ID::overtone7]->setFromNormalized(0.548455);
      value[ID::overtone8]->setFromNormalized(0.000000);
      value[ID::overtone9]->setFromNormalized(0.500000);
      value[ID::overtone10]->setFromNormalized(0.000000);
      value[ID::overtone11]->setFromNormalized(0.460409);
      value[ID::overtone12]->setFromNormalized(0.000000);
      value[ID::overtone13]->setFromNormalized(0.426936);
      value[ID::overtone14]->setFromNormalized(0.000000);
      value[ID::overtone15]->setFromNormalized(0.397940);
      value[ID::chordGain0]->setFromNormalized(1.000000);
      value[ID::chordGain1]->setFromNormalized(0.924000);
      value[ID::chordGain2]->setFromNormalized(0.874000);
      value[ID::chordGain3]->setFromNormalized(0.694000);
      value[ID::chordSemi0]->setFromNormalized(0.000000);
      value[ID::chordSemi1]->setFromNormalized(0.058333);
      value[ID::chordSemi2]->setFromNormalized(0.116667);
      value[ID::chordSemi3]->setFromNormalized(0.175000);
      value[ID::chordMilli0]->setFromNormalized(0.000000);
      value[ID::chordMilli1]->setFromNormalized(0.000000);
      value[ID::chordMilli2]->setFromNormalized(0.000000);
      value[ID::chordMilli3]->setFromNormalized(0.000000);
      value[ID::chordPan0]->setFromNormalized(0.500000);
      value[ID::chordPan1]->setFromNormalized(0.500000);
      value[ID::chordPan2]->setFromNormalized(0.500000);
      value[ID::chordPan3]->setFromNormalized(0.500000);
      value[ID::nVoice]->setFromNormalized(1.000000);
      value[ID::smoothness]->setFromNormalized(0.100000);
      value[ID::pitchBend]->setFromNormalized(0.500000);
    } break;

    case presetRandomPitchStereo: {
      value[ID::bypass]->setFromNormalized(0);
      value[ID::aliasing]->setFromNormalized(0.000000);
      value[ID::negativeSemi]->setFromNormalized(0.000000);
      value[ID::masterOctave]->setFromNormalized(0.500000);
      value[ID::equalTemperament]->setFromNormalized(0.154441);
      value[ID::pitchMultiply]->setFromNormalized(0.250000);
      value[ID::pitchModulo]->setFromNormalized(0.000000);
      value[ID::seed]->setFromNormalized(0.000000);
      value[ID::randomRetrigger]->setFromNormalized(0.000000);
      value[ID::randomGainAmount]->setFromNormalized(0.000000);
      value[ID::randomFrequencyAmount]->setFromNormalized(0.260000);
      value[ID::chorusMix]->setFromNormalized(0.000000);
      value[ID::chorusFrequency]->setFromNormalized(0.500000);
      value[ID::chorusDepth]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange0]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange1]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange2]->setFromNormalized(0.000000);
      value[ID::chorusMinDelayTime0]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime1]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime2]->setFromNormalized(0.500000);
      value[ID::chorusPhase]->setFromNormalized(0.000000);
      value[ID::chorusOffset]->setFromNormalized(0.000000);
      value[ID::chorusFeedback]->setFromNormalized(0.000000);
      value[ID::chorusKeyFollow]->setFromNormalized(1.000000);
      value[ID::gain]->setFromNormalized(0.500000);
      value[ID::gainBoost]->setFromNormalized(0.000000);
      value[ID::gainA]->setFromNormalized(0.000000);
      value[ID::gainD]->setFromNormalized(0.500000);
      value[ID::gainS]->setFromNormalized(0.500000);
      value[ID::gainR]->setFromNormalized(0.724144);
      value[ID::gainEnvelopeCurve]->setFromNormalized(0.000000);
      value[ID::lowShelfPitch]->setFromNormalized(0.000000);
      value[ID::lowShelfGain]->setFromNormalized(0.500000);
      value[ID::highShelfPitch]->setFromNormalized(0.000000);
      value[ID::highShelfGain]->setFromNormalized(0.500000);
      value[ID::gain0]->setFromNormalized(1.000000);
      value[ID::gain1]->setFromNormalized(1.000000);
      value[ID::gain2]->setFromNormalized(1.000000);
      value[ID::gain3]->setFromNormalized(1.000000);
      value[ID::gain4]->setFromNormalized(1.000000);
      value[ID::gain5]->setFromNormalized(1.000000);
      value[ID::gain6]->setFromNormalized(1.000000);
      value[ID::gain7]->setFromNormalized(1.000000);
      value[ID::semi0]->setFromNormalized(0.000000);
      value[ID::semi1]->setFromNormalized(0.033333);
      value[ID::semi2]->setFromNormalized(0.100000);
      value[ID::semi3]->setFromNormalized(0.000000);
      value[ID::semi4]->setFromNormalized(0.033333);
      value[ID::semi5]->setFromNormalized(0.166667);
      value[ID::semi6]->setFromNormalized(0.000000);
      value[ID::semi7]->setFromNormalized(0.000000);
      value[ID::milli0]->setFromNormalized(0.000000);
      value[ID::milli1]->setFromNormalized(0.000000);
      value[ID::milli2]->setFromNormalized(0.000000);
      value[ID::milli3]->setFromNormalized(0.000000);
      value[ID::milli4]->setFromNormalized(0.470000);
      value[ID::milli5]->setFromNormalized(0.106000);
      value[ID::milli6]->setFromNormalized(0.256000);
      value[ID::milli7]->setFromNormalized(0.356000);
      value[ID::overtone0]->setFromNormalized(1.000000);
      value[ID::overtone1]->setFromNormalized(0.849485);
      value[ID::overtone2]->setFromNormalized(0.761439);
      value[ID::overtone3]->setFromNormalized(0.698970);
      value[ID::overtone4]->setFromNormalized(0.650515);
      value[ID::overtone5]->setFromNormalized(0.610924);
      value[ID::overtone6]->setFromNormalized(0.577451);
      value[ID::overtone7]->setFromNormalized(0.548455);
      value[ID::overtone8]->setFromNormalized(0.522879);
      value[ID::overtone9]->setFromNormalized(0.500000);
      value[ID::overtone10]->setFromNormalized(0.464286);
      value[ID::overtone11]->setFromNormalized(0.421429);
      value[ID::overtone12]->setFromNormalized(0.392857);
      value[ID::overtone13]->setFromNormalized(0.342857);
      value[ID::overtone14]->setFromNormalized(0.271429);
      value[ID::overtone15]->setFromNormalized(0.200000);
      value[ID::chordGain0]->setFromNormalized(1.000000);
      value[ID::chordGain1]->setFromNormalized(1.000000);
      value[ID::chordGain2]->setFromNormalized(1.000000);
      value[ID::chordGain3]->setFromNormalized(1.000000);
      value[ID::chordSemi0]->setFromNormalized(0.000000);
      value[ID::chordSemi1]->setFromNormalized(0.000000);
      value[ID::chordSemi2]->setFromNormalized(0.000000);
      value[ID::chordSemi3]->setFromNormalized(0.000000);
      value[ID::chordMilli0]->setFromNormalized(0.000000);
      value[ID::chordMilli1]->setFromNormalized(0.000000);
      value[ID::chordMilli2]->setFromNormalized(0.000000);
      value[ID::chordMilli3]->setFromNormalized(0.000000);
      value[ID::chordPan0]->setFromNormalized(0.000000);
      value[ID::chordPan1]->setFromNormalized(1.000000);
      value[ID::chordPan2]->setFromNormalized(0.500000);
      value[ID::chordPan3]->setFromNormalized(0.500000);
      value[ID::nVoice]->setFromNormalized(1.000000);
      value[ID::smoothness]->setFromNormalized(0.100000);
      value[ID::pitchBend]->setFromNormalized(0.500000);
    } break;

    case presetET7Cluster: {
      value[ID::bypass]->setFromNormalized(0);
      value[ID::aliasing]->setFromNormalized(0.000000);
      value[ID::negativeSemi]->setFromNormalized(0.000000);
      value[ID::masterOctave]->setFromNormalized(0.500000);
      value[ID::equalTemperament]->setFromNormalized(0.098441);
      value[ID::pitchMultiply]->setFromNormalized(0.250000);
      value[ID::pitchModulo]->setFromNormalized(0.000000);
      value[ID::seed]->setFromNormalized(0.000000);
      value[ID::randomRetrigger]->setFromNormalized(0.000000);
      value[ID::randomGainAmount]->setFromNormalized(0.000000);
      value[ID::randomFrequencyAmount]->setFromNormalized(0.000000);
      value[ID::chorusMix]->setFromNormalized(0.744000);
      value[ID::chorusFrequency]->setFromNormalized(0.508052);
      value[ID::chorusDepth]->setFromNormalized(0.128000);
      value[ID::chorusDelayTimeRange0]->setFromNormalized(0.236000);
      value[ID::chorusDelayTimeRange1]->setFromNormalized(0.692000);
      value[ID::chorusDelayTimeRange2]->setFromNormalized(0.352000);
      value[ID::chorusMinDelayTime0]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime1]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime2]->setFromNormalized(0.500000);
      value[ID::chorusPhase]->setFromNormalized(0.000000);
      value[ID::chorusOffset]->setFromNormalized(1.000000);
      value[ID::chorusFeedback]->setFromNormalized(0.000000);
      value[ID::chorusKeyFollow]->setFromNormalized(1.000000);
      value[ID::gain]->setFromNormalized(0.500000);
      value[ID::gainBoost]->setFromNormalized(0.000000);
      value[ID::gainA]->setFromNormalized(0.216000);
      value[ID::gainD]->setFromNormalized(0.500000);
      value[ID::gainS]->setFromNormalized(1.000000);
      value[ID::gainR]->setFromNormalized(0.340000);
      value[ID::gainEnvelopeCurve]->setFromNormalized(0.000000);
      value[ID::lowShelfPitch]->setFromNormalized(0.000000);
      value[ID::lowShelfGain]->setFromNormalized(0.500000);
      value[ID::highShelfPitch]->setFromNormalized(0.000000);
      value[ID::highShelfGain]->setFromNormalized(0.500000);
      value[ID::gain0]->setFromNormalized(1.000000);
      value[ID::gain1]->setFromNormalized(1.000000);
      value[ID::gain2]->setFromNormalized(0.630000);
      value[ID::gain3]->setFromNormalized(0.808000);
      value[ID::gain4]->setFromNormalized(0.852000);
      value[ID::gain5]->setFromNormalized(0.776000);
      value[ID::gain6]->setFromNormalized(0.824000);
      value[ID::gain7]->setFromNormalized(0.932000);
      value[ID::semi0]->setFromNormalized(0.000000);
      value[ID::semi1]->setFromNormalized(0.016667);
      value[ID::semi2]->setFromNormalized(0.050000);
      value[ID::semi3]->setFromNormalized(0.066667);
      value[ID::semi4]->setFromNormalized(0.083333);
      value[ID::semi5]->setFromNormalized(0.058333);
      value[ID::semi6]->setFromNormalized(0.116667);
      value[ID::semi7]->setFromNormalized(0.000000);
      value[ID::milli0]->setFromNormalized(0.000000);
      value[ID::milli1]->setFromNormalized(0.000000);
      value[ID::milli2]->setFromNormalized(0.000000);
      value[ID::milli3]->setFromNormalized(0.000000);
      value[ID::milli4]->setFromNormalized(0.000000);
      value[ID::milli5]->setFromNormalized(0.512000);
      value[ID::milli6]->setFromNormalized(0.000000);
      value[ID::milli7]->setFromNormalized(0.254000);
      value[ID::overtone0]->setFromNormalized(1.000000);
      value[ID::overtone1]->setFromNormalized(0.849485);
      value[ID::overtone2]->setFromNormalized(0.761439);
      value[ID::overtone3]->setFromNormalized(0.698970);
      value[ID::overtone4]->setFromNormalized(0.650515);
      value[ID::overtone5]->setFromNormalized(0.610925);
      value[ID::overtone6]->setFromNormalized(0.577451);
      value[ID::overtone7]->setFromNormalized(0.548455);
      value[ID::overtone8]->setFromNormalized(0.522879);
      value[ID::overtone9]->setFromNormalized(0.500000);
      value[ID::overtone10]->setFromNormalized(0.479303);
      value[ID::overtone11]->setFromNormalized(0.460409);
      value[ID::overtone12]->setFromNormalized(0.443028);
      value[ID::overtone13]->setFromNormalized(0.426937);
      value[ID::overtone14]->setFromNormalized(0.411955);
      value[ID::overtone15]->setFromNormalized(0.397940);
      value[ID::chordGain0]->setFromNormalized(1.000000);
      value[ID::chordGain1]->setFromNormalized(1.000000);
      value[ID::chordGain2]->setFromNormalized(1.000000);
      value[ID::chordGain3]->setFromNormalized(1.000000);
      value[ID::chordSemi0]->setFromNormalized(0.000000);
      value[ID::chordSemi1]->setFromNormalized(0.025000);
      value[ID::chordSemi2]->setFromNormalized(0.033333);
      value[ID::chordSemi3]->setFromNormalized(0.083333);
      value[ID::chordMilli0]->setFromNormalized(0.000000);
      value[ID::chordMilli1]->setFromNormalized(0.000000);
      value[ID::chordMilli2]->setFromNormalized(0.000000);
      value[ID::chordMilli3]->setFromNormalized(0.000000);
      value[ID::chordPan0]->setFromNormalized(0.500000);
      value[ID::chordPan1]->setFromNormalized(0.416000);
      value[ID::chordPan2]->setFromNormalized(0.632000);
      value[ID::chordPan3]->setFromNormalized(0.500000);
      value[ID::nVoice]->setFromNormalized(1.000000);
      value[ID::smoothness]->setFromNormalized(0.100000);
      value[ID::pitchBend]->setFromNormalized(0.500000);
    } break;

    case presetChorusKeyFollow: {
      value[ID::bypass]->setFromNormalized(0);
      value[ID::aliasing]->setFromNormalized(0.000000);
      value[ID::negativeSemi]->setFromNormalized(0.000000);
      value[ID::masterOctave]->setFromNormalized(0.500000);
      value[ID::equalTemperament]->setFromNormalized(0.186441);
      value[ID::pitchMultiply]->setFromNormalized(0.250000);
      value[ID::pitchModulo]->setFromNormalized(0.000000);
      value[ID::seed]->setFromNormalized(0.000000);
      value[ID::randomRetrigger]->setFromNormalized(0.000000);
      value[ID::randomGainAmount]->setFromNormalized(0.128000);
      value[ID::randomFrequencyAmount]->setFromNormalized(0.064000);
      value[ID::chorusMix]->setFromNormalized(0.760000);
      value[ID::chorusFrequency]->setFromNormalized(0.464000);
      value[ID::chorusDepth]->setFromNormalized(1.000000);
      value[ID::chorusDelayTimeRange0]->setFromNormalized(0.128000);
      value[ID::chorusDelayTimeRange1]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange2]->setFromNormalized(0.000000);
      value[ID::chorusMinDelayTime0]->setFromNormalized(0.140000);
      value[ID::chorusMinDelayTime1]->setFromNormalized(0.736000);
      value[ID::chorusMinDelayTime2]->setFromNormalized(0.500000);
      value[ID::chorusPhase]->setFromNormalized(0.000000);
      value[ID::chorusOffset]->setFromNormalized(1.000000);
      value[ID::chorusFeedback]->setFromNormalized(0.956000);
      value[ID::chorusKeyFollow]->setFromNormalized(1.000000);
      value[ID::gain]->setFromNormalized(0.500000);
      value[ID::gainBoost]->setFromNormalized(0.000000);
      value[ID::gainA]->setFromNormalized(0.000000);
      value[ID::gainD]->setFromNormalized(0.500000);
      value[ID::gainS]->setFromNormalized(0.548000);
      value[ID::gainR]->setFromNormalized(0.000000);
      value[ID::gainEnvelopeCurve]->setFromNormalized(0.000000);
      value[ID::lowShelfPitch]->setFromNormalized(0.000000);
      value[ID::lowShelfGain]->setFromNormalized(0.500000);
      value[ID::highShelfPitch]->setFromNormalized(0.000000);
      value[ID::highShelfGain]->setFromNormalized(0.500000);
      value[ID::gain0]->setFromNormalized(1.000000);
      value[ID::gain1]->setFromNormalized(1.000000);
      value[ID::gain2]->setFromNormalized(1.000000);
      value[ID::gain3]->setFromNormalized(1.000000);
      value[ID::gain4]->setFromNormalized(0.788000);
      value[ID::gain5]->setFromNormalized(1.000000);
      value[ID::gain6]->setFromNormalized(1.000000);
      value[ID::gain7]->setFromNormalized(0.900000);
      value[ID::semi0]->setFromNormalized(0.000000);
      value[ID::semi1]->setFromNormalized(0.000000);
      value[ID::semi2]->setFromNormalized(0.000000);
      value[ID::semi3]->setFromNormalized(0.000000);
      value[ID::semi4]->setFromNormalized(0.100000);
      value[ID::semi5]->setFromNormalized(0.000000);
      value[ID::semi6]->setFromNormalized(0.150000);
      value[ID::semi7]->setFromNormalized(0.241667);
      value[ID::milli0]->setFromNormalized(0.000000);
      value[ID::milli1]->setFromNormalized(0.102000);
      value[ID::milli2]->setFromNormalized(0.000000);
      value[ID::milli3]->setFromNormalized(0.082000);
      value[ID::milli4]->setFromNormalized(0.000000);
      value[ID::milli5]->setFromNormalized(0.000000);
      value[ID::milli6]->setFromNormalized(0.726000);
      value[ID::milli7]->setFromNormalized(0.000000);
      value[ID::overtone0]->setFromNormalized(0.564286);
      value[ID::overtone1]->setFromNormalized(1.000000);
      value[ID::overtone2]->setFromNormalized(0.835714);
      value[ID::overtone3]->setFromNormalized(0.707143);
      value[ID::overtone4]->setFromNormalized(0.571429);
      value[ID::overtone5]->setFromNormalized(0.478571);
      value[ID::overtone6]->setFromNormalized(0.385714);
      value[ID::overtone7]->setFromNormalized(0.378571);
      value[ID::overtone8]->setFromNormalized(0.471429);
      value[ID::overtone9]->setFromNormalized(0.585714);
      value[ID::overtone10]->setFromNormalized(0.642857);
      value[ID::overtone11]->setFromNormalized(0.728571);
      value[ID::overtone12]->setFromNormalized(0.771429);
      value[ID::overtone13]->setFromNormalized(0.728571);
      value[ID::overtone14]->setFromNormalized(0.607143);
      value[ID::overtone15]->setFromNormalized(0.450000);
      value[ID::chordGain0]->setFromNormalized(1.000000);
      value[ID::chordGain1]->setFromNormalized(1.000000);
      value[ID::chordGain2]->setFromNormalized(1.000000);
      value[ID::chordGain3]->setFromNormalized(1.000000);
      value[ID::chordSemi0]->setFromNormalized(0.000000);
      value[ID::chordSemi1]->setFromNormalized(0.000000);
      value[ID::chordSemi2]->setFromNormalized(0.000000);
      value[ID::chordSemi3]->setFromNormalized(0.000000);
      value[ID::chordMilli0]->setFromNormalized(0.000000);
      value[ID::chordMilli1]->setFromNormalized(0.000000);
      value[ID::chordMilli2]->setFromNormalized(0.000000);
      value[ID::chordMilli3]->setFromNormalized(0.000000);
      value[ID::chordPan0]->setFromNormalized(0.500000);
      value[ID::chordPan1]->setFromNormalized(0.500000);
      value[ID::chordPan2]->setFromNormalized(0.500000);
      value[ID::chordPan3]->setFromNormalized(0.500000);
      value[ID::nVoice]->setFromNormalized(1.000000);
      value[ID::smoothness]->setFromNormalized(0.100000);
      value[ID::pitchBend]->setFromNormalized(0.500000);
    } break;

    case presetRandomBell: {
      value[ID::bypass]->setFromNormalized(0);
      value[ID::aliasing]->setFromNormalized(0.000000);
      value[ID::negativeSemi]->setFromNormalized(0.000000);
      value[ID::masterOctave]->setFromNormalized(0.500000);
      value[ID::equalTemperament]->setFromNormalized(0.186441);
      value[ID::pitchMultiply]->setFromNormalized(0.250000);
      value[ID::pitchModulo]->setFromNormalized(0.000000);
      value[ID::seed]->setFromNormalized(0.000000);
      value[ID::randomRetrigger]->setFromNormalized(0.000000);
      value[ID::randomGainAmount]->setFromNormalized(0.000000);
      value[ID::randomFrequencyAmount]->setFromNormalized(1.000000);
      value[ID::chorusMix]->setFromNormalized(0.000000);
      value[ID::chorusFrequency]->setFromNormalized(0.500000);
      value[ID::chorusDepth]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange0]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange1]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange2]->setFromNormalized(0.000000);
      value[ID::chorusMinDelayTime0]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime1]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime2]->setFromNormalized(0.500000);
      value[ID::chorusPhase]->setFromNormalized(0.000000);
      value[ID::chorusOffset]->setFromNormalized(0.000000);
      value[ID::chorusFeedback]->setFromNormalized(0.000000);
      value[ID::chorusKeyFollow]->setFromNormalized(1.000000);
      value[ID::gain]->setFromNormalized(0.500000);
      value[ID::gainBoost]->setFromNormalized(0.000000);
      value[ID::gainA]->setFromNormalized(0.000000);
      value[ID::gainD]->setFromNormalized(0.500000);
      value[ID::gainS]->setFromNormalized(0.500000);
      value[ID::gainR]->setFromNormalized(0.736144);
      value[ID::gainEnvelopeCurve]->setFromNormalized(0.000000);
      value[ID::lowShelfPitch]->setFromNormalized(0.000000);
      value[ID::lowShelfGain]->setFromNormalized(0.500000);
      value[ID::highShelfPitch]->setFromNormalized(0.000000);
      value[ID::highShelfGain]->setFromNormalized(0.500000);
      value[ID::gain0]->setFromNormalized(1.000000);
      value[ID::gain1]->setFromNormalized(1.000000);
      value[ID::gain2]->setFromNormalized(1.000000);
      value[ID::gain3]->setFromNormalized(1.000000);
      value[ID::gain4]->setFromNormalized(1.000000);
      value[ID::gain5]->setFromNormalized(1.000000);
      value[ID::gain6]->setFromNormalized(1.000000);
      value[ID::gain7]->setFromNormalized(1.000000);
      value[ID::semi0]->setFromNormalized(0.500000);
      value[ID::semi1]->setFromNormalized(0.500000);
      value[ID::semi2]->setFromNormalized(0.500000);
      value[ID::semi3]->setFromNormalized(0.500000);
      value[ID::semi4]->setFromNormalized(0.500000);
      value[ID::semi5]->setFromNormalized(0.500000);
      value[ID::semi6]->setFromNormalized(0.500000);
      value[ID::semi7]->setFromNormalized(0.500000);
      value[ID::milli0]->setFromNormalized(0.000000);
      value[ID::milli1]->setFromNormalized(0.000000);
      value[ID::milli2]->setFromNormalized(0.000000);
      value[ID::milli3]->setFromNormalized(0.000000);
      value[ID::milli4]->setFromNormalized(0.000000);
      value[ID::milli5]->setFromNormalized(0.000000);
      value[ID::milli6]->setFromNormalized(0.000000);
      value[ID::milli7]->setFromNormalized(0.000000);
      value[ID::overtone0]->setFromNormalized(1.000000);
      value[ID::overtone1]->setFromNormalized(0.849485);
      value[ID::overtone2]->setFromNormalized(0.761439);
      value[ID::overtone3]->setFromNormalized(0.698970);
      value[ID::overtone4]->setFromNormalized(0.650515);
      value[ID::overtone5]->setFromNormalized(0.610925);
      value[ID::overtone6]->setFromNormalized(0.577451);
      value[ID::overtone7]->setFromNormalized(0.548455);
      value[ID::overtone8]->setFromNormalized(0.522879);
      value[ID::overtone9]->setFromNormalized(0.500000);
      value[ID::overtone10]->setFromNormalized(0.479303);
      value[ID::overtone11]->setFromNormalized(0.460409);
      value[ID::overtone12]->setFromNormalized(0.443028);
      value[ID::overtone13]->setFromNormalized(0.426937);
      value[ID::overtone14]->setFromNormalized(0.411955);
      value[ID::overtone15]->setFromNormalized(0.397940);
      value[ID::chordGain0]->setFromNormalized(1.000000);
      value[ID::chordGain1]->setFromNormalized(1.000000);
      value[ID::chordGain2]->setFromNormalized(1.000000);
      value[ID::chordGain3]->setFromNormalized(1.000000);
      value[ID::chordSemi0]->setFromNormalized(0.000000);
      value[ID::chordSemi1]->setFromNormalized(0.000000);
      value[ID::chordSemi2]->setFromNormalized(0.000000);
      value[ID::chordSemi3]->setFromNormalized(0.000000);
      value[ID::chordMilli0]->setFromNormalized(0.000000);
      value[ID::chordMilli1]->setFromNormalized(0.000000);
      value[ID::chordMilli2]->setFromNormalized(0.000000);
      value[ID::chordMilli3]->setFromNormalized(0.000000);
      value[ID::chordPan0]->setFromNormalized(0.500000);
      value[ID::chordPan1]->setFromNormalized(0.500000);
      value[ID::chordPan2]->setFromNormalized(0.500000);
      value[ID::chordPan3]->setFromNormalized(0.500000);
      value[ID::nVoice]->setFromNormalized(1.000000);
      value[ID::smoothness]->setFromNormalized(0.100000);
      value[ID::pitchBend]->setFromNormalized(0.500000);
    } break;

    case presetShelving: {
      value[ID::bypass]->setFromNormalized(0);
      value[ID::aliasing]->setFromNormalized(0.000000);
      value[ID::negativeSemi]->setFromNormalized(0.000000);
      value[ID::masterOctave]->setFromNormalized(0.500000);
      value[ID::equalTemperament]->setFromNormalized(0.186441);
      value[ID::pitchMultiply]->setFromNormalized(0.250000);
      value[ID::pitchModulo]->setFromNormalized(0.572000);
      value[ID::seed]->setFromNormalized(0.000000);
      value[ID::randomRetrigger]->setFromNormalized(0.000000);
      value[ID::randomGainAmount]->setFromNormalized(0.744000);
      value[ID::randomFrequencyAmount]->setFromNormalized(0.000000);
      value[ID::chorusMix]->setFromNormalized(0.000000);
      value[ID::chorusFrequency]->setFromNormalized(0.500000);
      value[ID::chorusDepth]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange0]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange1]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange2]->setFromNormalized(0.000000);
      value[ID::chorusMinDelayTime0]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime1]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime2]->setFromNormalized(0.500000);
      value[ID::chorusPhase]->setFromNormalized(0.000000);
      value[ID::chorusOffset]->setFromNormalized(0.000000);
      value[ID::chorusFeedback]->setFromNormalized(0.000000);
      value[ID::chorusKeyFollow]->setFromNormalized(1.000000);
      value[ID::gain]->setFromNormalized(0.500000);
      value[ID::gainBoost]->setFromNormalized(0.000000);
      value[ID::gainA]->setFromNormalized(0.000000);
      value[ID::gainD]->setFromNormalized(0.276000);
      value[ID::gainS]->setFromNormalized(0.000000);
      value[ID::gainR]->setFromNormalized(0.324000);
      value[ID::gainEnvelopeCurve]->setFromNormalized(0.000000);
      value[ID::lowShelfPitch]->setFromNormalized(0.250000);
      value[ID::lowShelfGain]->setFromNormalized(1.000000);
      value[ID::highShelfPitch]->setFromNormalized(0.706000);
      value[ID::highShelfGain]->setFromNormalized(0.682000);
      value[ID::gain0]->setFromNormalized(1.000000);
      value[ID::gain1]->setFromNormalized(0.912000);
      value[ID::gain2]->setFromNormalized(0.942000);
      value[ID::gain3]->setFromNormalized(0.982000);
      value[ID::gain4]->setFromNormalized(0.984000);
      value[ID::gain5]->setFromNormalized(0.856000);
      value[ID::gain6]->setFromNormalized(1.000000);
      value[ID::gain7]->setFromNormalized(1.000000);
      value[ID::semi0]->setFromNormalized(0.000000);
      value[ID::semi1]->setFromNormalized(0.375000);
      value[ID::semi2]->setFromNormalized(0.183333);
      value[ID::semi3]->setFromNormalized(0.083333);
      value[ID::semi4]->setFromNormalized(0.166667);
      value[ID::semi5]->setFromNormalized(0.433333);
      value[ID::semi6]->setFromNormalized(0.100000);
      value[ID::semi7]->setFromNormalized(0.000000);
      value[ID::milli0]->setFromNormalized(0.000000);
      value[ID::milli1]->setFromNormalized(0.000000);
      value[ID::milli2]->setFromNormalized(0.000000);
      value[ID::milli3]->setFromNormalized(0.000000);
      value[ID::milli4]->setFromNormalized(0.000000);
      value[ID::milli5]->setFromNormalized(0.000000);
      value[ID::milli6]->setFromNormalized(0.000000);
      value[ID::milli7]->setFromNormalized(0.000000);
      value[ID::overtone0]->setFromNormalized(0.600000);
      value[ID::overtone1]->setFromNormalized(0.685714);
      value[ID::overtone2]->setFromNormalized(0.807143);
      value[ID::overtone3]->setFromNormalized(0.871429);
      value[ID::overtone4]->setFromNormalized(0.685714);
      value[ID::overtone5]->setFromNormalized(0.514286);
      value[ID::overtone6]->setFromNormalized(0.442857);
      value[ID::overtone7]->setFromNormalized(0.507143);
      value[ID::overtone8]->setFromNormalized(0.635714);
      value[ID::overtone9]->setFromNormalized(0.714286);
      value[ID::overtone10]->setFromNormalized(0.664286);
      value[ID::overtone11]->setFromNormalized(0.428571);
      value[ID::overtone12]->setFromNormalized(0.450000);
      value[ID::overtone13]->setFromNormalized(0.600000);
      value[ID::overtone14]->setFromNormalized(0.671429);
      value[ID::overtone15]->setFromNormalized(0.757143);
      value[ID::chordGain0]->setFromNormalized(1.000000);
      value[ID::chordGain1]->setFromNormalized(1.000000);
      value[ID::chordGain2]->setFromNormalized(1.000000);
      value[ID::chordGain3]->setFromNormalized(1.000000);
      value[ID::chordSemi0]->setFromNormalized(0.000000);
      value[ID::chordSemi1]->setFromNormalized(0.158333);
      value[ID::chordSemi2]->setFromNormalized(0.141667);
      value[ID::chordSemi3]->setFromNormalized(0.000000);
      value[ID::chordMilli0]->setFromNormalized(0.000000);
      value[ID::chordMilli1]->setFromNormalized(0.000000);
      value[ID::chordMilli2]->setFromNormalized(0.000000);
      value[ID::chordMilli3]->setFromNormalized(0.000000);
      value[ID::chordPan0]->setFromNormalized(0.500000);
      value[ID::chordPan1]->setFromNormalized(0.000000);
      value[ID::chordPan2]->setFromNormalized(1.000000);
      value[ID::chordPan3]->setFromNormalized(0.500000);
      value[ID::nVoice]->setFromNormalized(1.000000);
      value[ID::smoothness]->setFromNormalized(0.100000);
      value[ID::pitchBend]->setFromNormalized(0.500000);
    } break;

    case presetModuloOrgan: {
      value[ID::bypass]->setFromNormalized(0);
      value[ID::aliasing]->setFromNormalized(0.000000);
      value[ID::negativeSemi]->setFromNormalized(0.000000);
      value[ID::masterOctave]->setFromNormalized(0.500000);
      value[ID::equalTemperament]->setFromNormalized(0.730441);
      value[ID::pitchMultiply]->setFromNormalized(0.388000);
      value[ID::pitchModulo]->setFromNormalized(0.106000);
      value[ID::seed]->setFromNormalized(0.000000);
      value[ID::randomRetrigger]->setFromNormalized(0.000000);
      value[ID::randomGainAmount]->setFromNormalized(0.000000);
      value[ID::randomFrequencyAmount]->setFromNormalized(0.000000);
      value[ID::chorusMix]->setFromNormalized(1.000000);
      value[ID::chorusFrequency]->setFromNormalized(0.716000);
      value[ID::chorusDepth]->setFromNormalized(0.724000);
      value[ID::chorusDelayTimeRange0]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange1]->setFromNormalized(0.824000);
      value[ID::chorusDelayTimeRange2]->setFromNormalized(0.000000);
      value[ID::chorusMinDelayTime0]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime1]->setFromNormalized(0.672000);
      value[ID::chorusMinDelayTime2]->setFromNormalized(0.500000);
      value[ID::chorusPhase]->setFromNormalized(0.000000);
      value[ID::chorusOffset]->setFromNormalized(0.000000);
      value[ID::chorusFeedback]->setFromNormalized(0.492000);
      value[ID::chorusKeyFollow]->setFromNormalized(1.000000);
      value[ID::gain]->setFromNormalized(0.500000);
      value[ID::gainBoost]->setFromNormalized(0.000000);
      value[ID::gainA]->setFromNormalized(0.000000);
      value[ID::gainD]->setFromNormalized(0.500000);
      value[ID::gainS]->setFromNormalized(0.500000);
      value[ID::gainR]->setFromNormalized(0.000144);
      value[ID::gainEnvelopeCurve]->setFromNormalized(0.000000);
      value[ID::lowShelfPitch]->setFromNormalized(0.000000);
      value[ID::lowShelfGain]->setFromNormalized(0.500000);
      value[ID::highShelfPitch]->setFromNormalized(0.000000);
      value[ID::highShelfGain]->setFromNormalized(0.500000);
      value[ID::gain0]->setFromNormalized(1.000000);
      value[ID::gain1]->setFromNormalized(1.000000);
      value[ID::gain2]->setFromNormalized(1.000000);
      value[ID::gain3]->setFromNormalized(1.000000);
      value[ID::gain4]->setFromNormalized(1.000000);
      value[ID::gain5]->setFromNormalized(1.000000);
      value[ID::gain6]->setFromNormalized(1.000000);
      value[ID::gain7]->setFromNormalized(1.000000);
      value[ID::semi0]->setFromNormalized(0.000000);
      value[ID::semi1]->setFromNormalized(0.458333);
      value[ID::semi2]->setFromNormalized(0.191667);
      value[ID::semi3]->setFromNormalized(0.816667);
      value[ID::semi4]->setFromNormalized(0.250000);
      value[ID::semi5]->setFromNormalized(0.108333);
      value[ID::semi6]->setFromNormalized(0.125000);
      value[ID::semi7]->setFromNormalized(0.825000);
      value[ID::milli0]->setFromNormalized(0.000000);
      value[ID::milli1]->setFromNormalized(0.000000);
      value[ID::milli2]->setFromNormalized(0.000000);
      value[ID::milli3]->setFromNormalized(0.000000);
      value[ID::milli4]->setFromNormalized(0.000000);
      value[ID::milli5]->setFromNormalized(0.000000);
      value[ID::milli6]->setFromNormalized(0.000000);
      value[ID::milli7]->setFromNormalized(0.000000);
      value[ID::overtone0]->setFromNormalized(1.000000);
      value[ID::overtone1]->setFromNormalized(0.185714);
      value[ID::overtone2]->setFromNormalized(0.171429);
      value[ID::overtone3]->setFromNormalized(0.150000);
      value[ID::overtone4]->setFromNormalized(0.142857);
      value[ID::overtone5]->setFromNormalized(0.392857);
      value[ID::overtone6]->setFromNormalized(0.657143);
      value[ID::overtone7]->setFromNormalized(0.771429);
      value[ID::overtone8]->setFromNormalized(0.807143);
      value[ID::overtone9]->setFromNormalized(0.071429);
      value[ID::overtone10]->setFromNormalized(0.064286);
      value[ID::overtone11]->setFromNormalized(0.064286);
      value[ID::overtone12]->setFromNormalized(0.064286);
      value[ID::overtone13]->setFromNormalized(0.064286);
      value[ID::overtone14]->setFromNormalized(0.064286);
      value[ID::overtone15]->setFromNormalized(0.064286);
      value[ID::chordGain0]->setFromNormalized(1.000000);
      value[ID::chordGain1]->setFromNormalized(1.000000);
      value[ID::chordGain2]->setFromNormalized(1.000000);
      value[ID::chordGain3]->setFromNormalized(1.000000);
      value[ID::chordSemi0]->setFromNormalized(0.000000);
      value[ID::chordSemi1]->setFromNormalized(0.000000);
      value[ID::chordSemi2]->setFromNormalized(0.000000);
      value[ID::chordSemi3]->setFromNormalized(0.000000);
      value[ID::chordMilli0]->setFromNormalized(0.000000);
      value[ID::chordMilli1]->setFromNormalized(0.000000);
      value[ID::chordMilli2]->setFromNormalized(0.000000);
      value[ID::chordMilli3]->setFromNormalized(0.000000);
      value[ID::chordPan0]->setFromNormalized(0.500000);
      value[ID::chordPan1]->setFromNormalized(0.500000);
      value[ID::chordPan2]->setFromNormalized(0.500000);
      value[ID::chordPan3]->setFromNormalized(0.500000);
      value[ID::nVoice]->setFromNormalized(1.000000);
      value[ID::smoothness]->setFromNormalized(0.100000);
      value[ID::pitchBend]->setFromNormalized(0.500000);
    } break;

    case presetDim: {
      value[ID::bypass]->setFromNormalized(0);
      value[ID::aliasing]->setFromNormalized(0.000000);
      value[ID::negativeSemi]->setFromNormalized(0.000000);
      value[ID::masterOctave]->setFromNormalized(0.500000);
      value[ID::equalTemperament]->setFromNormalized(0.186441);
      value[ID::pitchMultiply]->setFromNormalized(0.250000);
      value[ID::pitchModulo]->setFromNormalized(0.000000);
      value[ID::seed]->setFromNormalized(0.000000);
      value[ID::randomRetrigger]->setFromNormalized(0.000000);
      value[ID::randomGainAmount]->setFromNormalized(0.000000);
      value[ID::randomFrequencyAmount]->setFromNormalized(0.000000);
      value[ID::chorusMix]->setFromNormalized(0.000000);
      value[ID::chorusFrequency]->setFromNormalized(0.500000);
      value[ID::chorusDepth]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange0]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange1]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange2]->setFromNormalized(0.000000);
      value[ID::chorusMinDelayTime0]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime1]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime2]->setFromNormalized(0.500000);
      value[ID::chorusPhase]->setFromNormalized(0.000000);
      value[ID::chorusOffset]->setFromNormalized(0.000000);
      value[ID::chorusFeedback]->setFromNormalized(0.000000);
      value[ID::chorusKeyFollow]->setFromNormalized(1.000000);
      value[ID::gain]->setFromNormalized(0.500000);
      value[ID::gainBoost]->setFromNormalized(0.176000);
      value[ID::gainA]->setFromNormalized(0.000000);
      value[ID::gainD]->setFromNormalized(0.220000);
      value[ID::gainS]->setFromNormalized(0.000000);
      value[ID::gainR]->setFromNormalized(0.604144);
      value[ID::gainEnvelopeCurve]->setFromNormalized(0.000000);
      value[ID::lowShelfPitch]->setFromNormalized(0.000000);
      value[ID::lowShelfGain]->setFromNormalized(0.500000);
      value[ID::highShelfPitch]->setFromNormalized(0.372000);
      value[ID::highShelfGain]->setFromNormalized(0.354000);
      value[ID::gain0]->setFromNormalized(1.000000);
      value[ID::gain1]->setFromNormalized(0.656000);
      value[ID::gain2]->setFromNormalized(1.000000);
      value[ID::gain3]->setFromNormalized(1.000000);
      value[ID::gain4]->setFromNormalized(0.872000);
      value[ID::gain5]->setFromNormalized(1.000000);
      value[ID::gain6]->setFromNormalized(1.000000);
      value[ID::gain7]->setFromNormalized(1.000000);
      value[ID::semi0]->setFromNormalized(0.000000);
      value[ID::semi1]->setFromNormalized(0.000000);
      value[ID::semi2]->setFromNormalized(0.033333);
      value[ID::semi3]->setFromNormalized(0.041667);
      value[ID::semi4]->setFromNormalized(0.100000);
      value[ID::semi5]->setFromNormalized(0.058333);
      value[ID::semi6]->setFromNormalized(0.000000);
      value[ID::semi7]->setFromNormalized(0.000000);
      value[ID::milli0]->setFromNormalized(0.000000);
      value[ID::milli1]->setFromNormalized(0.032000);
      value[ID::milli2]->setFromNormalized(0.000000);
      value[ID::milli3]->setFromNormalized(0.000000);
      value[ID::milli4]->setFromNormalized(0.000000);
      value[ID::milli5]->setFromNormalized(0.000000);
      value[ID::milli6]->setFromNormalized(0.000000);
      value[ID::milli7]->setFromNormalized(0.000000);
      value[ID::overtone0]->setFromNormalized(0.971429);
      value[ID::overtone1]->setFromNormalized(0.121432);
      value[ID::overtone2]->setFromNormalized(0.921429);
      value[ID::overtone3]->setFromNormalized(0.164282);
      value[ID::overtone4]->setFromNormalized(0.178567);
      value[ID::overtone5]->setFromNormalized(0.207144);
      value[ID::overtone6]->setFromNormalized(0.257141);
      value[ID::overtone7]->setFromNormalized(0.292854);
      value[ID::overtone8]->setFromNormalized(0.600000);
      value[ID::overtone9]->setFromNormalized(0.885714);
      value[ID::overtone10]->setFromNormalized(0.328571);
      value[ID::overtone11]->setFromNormalized(0.142857);
      value[ID::overtone12]->setFromNormalized(0.135712);
      value[ID::overtone13]->setFromNormalized(0.271431);
      value[ID::overtone14]->setFromNormalized(0.442856);
      value[ID::overtone15]->setFromNormalized(0.971429);
      value[ID::chordGain0]->setFromNormalized(1.000000);
      value[ID::chordGain1]->setFromNormalized(0.834000);
      value[ID::chordGain2]->setFromNormalized(1.000000);
      value[ID::chordGain3]->setFromNormalized(1.000000);
      value[ID::chordSemi0]->setFromNormalized(0.000000);
      value[ID::chordSemi1]->setFromNormalized(0.183333);
      value[ID::chordSemi2]->setFromNormalized(0.058333);
      value[ID::chordSemi3]->setFromNormalized(0.058333);
      value[ID::chordMilli0]->setFromNormalized(0.000000);
      value[ID::chordMilli1]->setFromNormalized(0.600000);
      value[ID::chordMilli2]->setFromNormalized(0.056000);
      value[ID::chordMilli3]->setFromNormalized(0.190000);
      value[ID::chordPan0]->setFromNormalized(0.500000);
      value[ID::chordPan1]->setFromNormalized(0.500000);
      value[ID::chordPan2]->setFromNormalized(0.000000);
      value[ID::chordPan3]->setFromNormalized(1.000000);
      value[ID::nVoice]->setFromNormalized(1.000000);
      value[ID::smoothness]->setFromNormalized(0.100000);
      value[ID::pitchBend]->setFromNormalized(0.500000);
    } break;

    case presetNarrowModulo: {
      value[ID::bypass]->setFromNormalized(0);
      value[ID::aliasing]->setFromNormalized(0.000000);
      value[ID::negativeSemi]->setFromNormalized(0.000000);
      value[ID::masterOctave]->setFromNormalized(0.304000);
      value[ID::equalTemperament]->setFromNormalized(0.186441);
      value[ID::pitchMultiply]->setFromNormalized(0.250000);
      value[ID::pitchModulo]->setFromNormalized(0.005800);
      value[ID::seed]->setFromNormalized(0.000000);
      value[ID::randomRetrigger]->setFromNormalized(0.000000);
      value[ID::randomGainAmount]->setFromNormalized(0.000000);
      value[ID::randomFrequencyAmount]->setFromNormalized(0.000000);
      value[ID::chorusMix]->setFromNormalized(0.000000);
      value[ID::chorusFrequency]->setFromNormalized(0.500000);
      value[ID::chorusDepth]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange0]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange1]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange2]->setFromNormalized(0.000000);
      value[ID::chorusMinDelayTime0]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime1]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime2]->setFromNormalized(0.500000);
      value[ID::chorusPhase]->setFromNormalized(0.000000);
      value[ID::chorusOffset]->setFromNormalized(0.000000);
      value[ID::chorusFeedback]->setFromNormalized(0.000000);
      value[ID::chorusKeyFollow]->setFromNormalized(1.000000);
      value[ID::gain]->setFromNormalized(0.500000);
      value[ID::gainBoost]->setFromNormalized(0.000000);
      value[ID::gainA]->setFromNormalized(0.000000);
      value[ID::gainD]->setFromNormalized(0.680000);
      value[ID::gainS]->setFromNormalized(0.684000);
      value[ID::gainR]->setFromNormalized(0.228144);
      value[ID::gainEnvelopeCurve]->setFromNormalized(0.000000);
      value[ID::lowShelfPitch]->setFromNormalized(0.000000);
      value[ID::lowShelfGain]->setFromNormalized(0.500000);
      value[ID::highShelfPitch]->setFromNormalized(0.000000);
      value[ID::highShelfGain]->setFromNormalized(0.500000);
      value[ID::gain0]->setFromNormalized(1.000000);
      value[ID::gain1]->setFromNormalized(1.000000);
      value[ID::gain2]->setFromNormalized(1.000000);
      value[ID::gain3]->setFromNormalized(1.000000);
      value[ID::gain4]->setFromNormalized(0.916000);
      value[ID::gain5]->setFromNormalized(1.000000);
      value[ID::gain6]->setFromNormalized(1.000000);
      value[ID::gain7]->setFromNormalized(1.000000);
      value[ID::semi0]->setFromNormalized(0.000000);
      value[ID::semi1]->setFromNormalized(0.050000);
      value[ID::semi2]->setFromNormalized(0.075000);
      value[ID::semi3]->setFromNormalized(0.216667);
      value[ID::semi4]->setFromNormalized(0.308333);
      value[ID::semi5]->setFromNormalized(0.133333);
      value[ID::semi6]->setFromNormalized(0.075000);
      value[ID::semi7]->setFromNormalized(0.066667);
      value[ID::milli0]->setFromNormalized(0.000000);
      value[ID::milli1]->setFromNormalized(0.000000);
      value[ID::milli2]->setFromNormalized(0.000000);
      value[ID::milli3]->setFromNormalized(0.000000);
      value[ID::milli4]->setFromNormalized(0.000000);
      value[ID::milli5]->setFromNormalized(0.000000);
      value[ID::milli6]->setFromNormalized(0.000000);
      value[ID::milli7]->setFromNormalized(0.000000);
      value[ID::overtone0]->setFromNormalized(1.000000);
      value[ID::overtone1]->setFromNormalized(1.000000);
      value[ID::overtone2]->setFromNormalized(1.000000);
      value[ID::overtone3]->setFromNormalized(1.000000);
      value[ID::overtone4]->setFromNormalized(1.000000);
      value[ID::overtone5]->setFromNormalized(1.000000);
      value[ID::overtone6]->setFromNormalized(1.000000);
      value[ID::overtone7]->setFromNormalized(1.000000);
      value[ID::overtone8]->setFromNormalized(1.000000);
      value[ID::overtone9]->setFromNormalized(1.000000);
      value[ID::overtone10]->setFromNormalized(1.000000);
      value[ID::overtone11]->setFromNormalized(1.000000);
      value[ID::overtone12]->setFromNormalized(1.000000);
      value[ID::overtone13]->setFromNormalized(1.000000);
      value[ID::overtone14]->setFromNormalized(1.000000);
      value[ID::overtone15]->setFromNormalized(1.000000);
      value[ID::chordGain0]->setFromNormalized(0.850000);
      value[ID::chordGain1]->setFromNormalized(1.000000);
      value[ID::chordGain2]->setFromNormalized(1.000000);
      value[ID::chordGain3]->setFromNormalized(1.000000);
      value[ID::chordSemi0]->setFromNormalized(0.000000);
      value[ID::chordSemi1]->setFromNormalized(0.100000);
      value[ID::chordSemi2]->setFromNormalized(0.100000);
      value[ID::chordSemi3]->setFromNormalized(0.000000);
      value[ID::chordMilli0]->setFromNormalized(0.000000);
      value[ID::chordMilli1]->setFromNormalized(0.000000);
      value[ID::chordMilli2]->setFromNormalized(0.024000);
      value[ID::chordMilli3]->setFromNormalized(0.016000);
      value[ID::chordPan0]->setFromNormalized(0.592000);
      value[ID::chordPan1]->setFromNormalized(0.308000);
      value[ID::chordPan2]->setFromNormalized(0.676000);
      value[ID::chordPan3]->setFromNormalized(0.428000);
      value[ID::nVoice]->setFromNormalized(1.000000);
      value[ID::smoothness]->setFromNormalized(0.100000);
      value[ID::pitchBend]->setFromNormalized(0.500000);
    } break;

    case presetET15: {
      value[ID::bypass]->setFromNormalized(0);
      value[ID::aliasing]->setFromNormalized(0.000000);
      value[ID::negativeSemi]->setFromNormalized(0.000000);
      value[ID::masterOctave]->setFromNormalized(0.430000);
      value[ID::equalTemperament]->setFromNormalized(0.236441);
      value[ID::pitchMultiply]->setFromNormalized(0.250000);
      value[ID::pitchModulo]->setFromNormalized(0.000000);
      value[ID::seed]->setFromNormalized(0.000000);
      value[ID::randomRetrigger]->setFromNormalized(0.000000);
      value[ID::randomGainAmount]->setFromNormalized(0.000000);
      value[ID::randomFrequencyAmount]->setFromNormalized(0.124000);
      value[ID::chorusMix]->setFromNormalized(0.000000);
      value[ID::chorusFrequency]->setFromNormalized(0.500000);
      value[ID::chorusDepth]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange0]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange1]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange2]->setFromNormalized(0.000000);
      value[ID::chorusMinDelayTime0]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime1]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime2]->setFromNormalized(0.500000);
      value[ID::chorusPhase]->setFromNormalized(0.000000);
      value[ID::chorusOffset]->setFromNormalized(0.000000);
      value[ID::chorusFeedback]->setFromNormalized(0.000000);
      value[ID::chorusKeyFollow]->setFromNormalized(1.000000);
      value[ID::gain]->setFromNormalized(0.500000);
      value[ID::gainBoost]->setFromNormalized(0.000000);
      value[ID::gainA]->setFromNormalized(0.000000);
      value[ID::gainD]->setFromNormalized(0.752000);
      value[ID::gainS]->setFromNormalized(0.216000);
      value[ID::gainR]->setFromNormalized(0.704000);
      value[ID::gainEnvelopeCurve]->setFromNormalized(0.000000);
      value[ID::lowShelfPitch]->setFromNormalized(0.000000);
      value[ID::lowShelfGain]->setFromNormalized(0.500000);
      value[ID::highShelfPitch]->setFromNormalized(0.000000);
      value[ID::highShelfGain]->setFromNormalized(0.500000);
      value[ID::gain0]->setFromNormalized(1.000000);
      value[ID::gain1]->setFromNormalized(0.830000);
      value[ID::gain2]->setFromNormalized(0.840000);
      value[ID::gain3]->setFromNormalized(1.000000);
      value[ID::gain4]->setFromNormalized(1.000000);
      value[ID::gain5]->setFromNormalized(1.000000);
      value[ID::gain6]->setFromNormalized(0.436000);
      value[ID::gain7]->setFromNormalized(0.318000);
      value[ID::semi0]->setFromNormalized(0.000000);
      value[ID::semi1]->setFromNormalized(0.050000);
      value[ID::semi2]->setFromNormalized(0.041667);
      value[ID::semi3]->setFromNormalized(0.183333);
      value[ID::semi4]->setFromNormalized(0.075000);
      value[ID::semi5]->setFromNormalized(0.075000);
      value[ID::semi6]->setFromNormalized(0.391667);
      value[ID::semi7]->setFromNormalized(0.616667);
      value[ID::milli0]->setFromNormalized(0.000000);
      value[ID::milli1]->setFromNormalized(0.000000);
      value[ID::milli2]->setFromNormalized(0.000000);
      value[ID::milli3]->setFromNormalized(0.000000);
      value[ID::milli4]->setFromNormalized(0.000000);
      value[ID::milli5]->setFromNormalized(0.010000);
      value[ID::milli6]->setFromNormalized(0.000000);
      value[ID::milli7]->setFromNormalized(0.000000);
      value[ID::overtone0]->setFromNormalized(1.000000);
      value[ID::overtone1]->setFromNormalized(0.300000);
      value[ID::overtone2]->setFromNormalized(0.014286);
      value[ID::overtone3]->setFromNormalized(0.178571);
      value[ID::overtone4]->setFromNormalized(1.000000);
      value[ID::overtone5]->setFromNormalized(0.185714);
      value[ID::overtone6]->setFromNormalized(0.285714);
      value[ID::overtone7]->setFromNormalized(0.285714);
      value[ID::overtone8]->setFromNormalized(0.128571);
      value[ID::overtone9]->setFromNormalized(1.000000);
      value[ID::overtone10]->setFromNormalized(0.185714);
      value[ID::overtone11]->setFromNormalized(0.214286);
      value[ID::overtone12]->setFromNormalized(0.250000);
      value[ID::overtone13]->setFromNormalized(0.192857);
      value[ID::overtone14]->setFromNormalized(0.864286);
      value[ID::overtone15]->setFromNormalized(0.135714);
      value[ID::chordGain0]->setFromNormalized(1.000000);
      value[ID::chordGain1]->setFromNormalized(1.000000);
      value[ID::chordGain2]->setFromNormalized(1.000000);
      value[ID::chordGain3]->setFromNormalized(0.844000);
      value[ID::chordSemi0]->setFromNormalized(0.000000);
      value[ID::chordSemi1]->setFromNormalized(0.000000);
      value[ID::chordSemi2]->setFromNormalized(0.050000);
      value[ID::chordSemi3]->setFromNormalized(0.125000);
      value[ID::chordMilli0]->setFromNormalized(0.000000);
      value[ID::chordMilli1]->setFromNormalized(0.008000);
      value[ID::chordMilli2]->setFromNormalized(0.004000);
      value[ID::chordMilli3]->setFromNormalized(0.000000);
      value[ID::chordPan0]->setFromNormalized(0.312000);
      value[ID::chordPan1]->setFromNormalized(0.520000);
      value[ID::chordPan2]->setFromNormalized(1.000000);
      value[ID::chordPan3]->setFromNormalized(0.000000);
      value[ID::nVoice]->setFromNormalized(1.000000);
      value[ID::smoothness]->setFromNormalized(0.100000);
      value[ID::pitchBend]->setFromNormalized(0.500000);
    } break;

    case presetReverseSemiLowPop: {
      value[ID::bypass]->setFromNormalized(0);
      value[ID::aliasing]->setFromNormalized(0.000000);
      value[ID::negativeSemi]->setFromNormalized(1.000000);
      value[ID::masterOctave]->setFromNormalized(0.854000);
      value[ID::equalTemperament]->setFromNormalized(0.296441);
      value[ID::pitchMultiply]->setFromNormalized(0.583200);
      value[ID::pitchModulo]->setFromNormalized(0.252000);
      value[ID::seed]->setFromNormalized(0.000000);
      value[ID::randomRetrigger]->setFromNormalized(0.000000);
      value[ID::randomGainAmount]->setFromNormalized(0.000000);
      value[ID::randomFrequencyAmount]->setFromNormalized(0.000000);
      value[ID::chorusMix]->setFromNormalized(0.204000);
      value[ID::chorusFrequency]->setFromNormalized(0.656000);
      value[ID::chorusDepth]->setFromNormalized(0.824000);
      value[ID::chorusDelayTimeRange0]->setFromNormalized(0.584000);
      value[ID::chorusDelayTimeRange1]->setFromNormalized(0.632000);
      value[ID::chorusDelayTimeRange2]->setFromNormalized(0.596000);
      value[ID::chorusMinDelayTime0]->setFromNormalized(0.192000);
      value[ID::chorusMinDelayTime1]->setFromNormalized(0.816000);
      value[ID::chorusMinDelayTime2]->setFromNormalized(0.216000);
      value[ID::chorusPhase]->setFromNormalized(0.000000);
      value[ID::chorusOffset]->setFromNormalized(1.000000);
      value[ID::chorusFeedback]->setFromNormalized(0.388000);
      value[ID::chorusKeyFollow]->setFromNormalized(0.000000);
      value[ID::gain]->setFromNormalized(0.500000);
      value[ID::gainBoost]->setFromNormalized(0.328000);
      value[ID::gainA]->setFromNormalized(0.084000);
      value[ID::gainD]->setFromNormalized(0.184000);
      value[ID::gainS]->setFromNormalized(0.000000);
      value[ID::gainR]->setFromNormalized(0.428144);
      value[ID::gainEnvelopeCurve]->setFromNormalized(0.000000);
      value[ID::lowShelfPitch]->setFromNormalized(0.000000);
      value[ID::lowShelfGain]->setFromNormalized(0.500000);
      value[ID::highShelfPitch]->setFromNormalized(0.000000);
      value[ID::highShelfGain]->setFromNormalized(0.500000);
      value[ID::gain0]->setFromNormalized(1.000000);
      value[ID::gain1]->setFromNormalized(1.000000);
      value[ID::gain2]->setFromNormalized(1.000000);
      value[ID::gain3]->setFromNormalized(1.000000);
      value[ID::gain4]->setFromNormalized(1.000000);
      value[ID::gain5]->setFromNormalized(1.000000);
      value[ID::gain6]->setFromNormalized(1.000000);
      value[ID::gain7]->setFromNormalized(1.000000);
      value[ID::semi0]->setFromNormalized(0.000000);
      value[ID::semi1]->setFromNormalized(0.066667);
      value[ID::semi2]->setFromNormalized(0.258333);
      value[ID::semi3]->setFromNormalized(0.133333);
      value[ID::semi4]->setFromNormalized(0.108333);
      value[ID::semi5]->setFromNormalized(0.058333);
      value[ID::semi6]->setFromNormalized(0.016667);
      value[ID::semi7]->setFromNormalized(0.233333);
      value[ID::milli0]->setFromNormalized(0.000000);
      value[ID::milli1]->setFromNormalized(0.000000);
      value[ID::milli2]->setFromNormalized(0.000000);
      value[ID::milli3]->setFromNormalized(0.000000);
      value[ID::milli4]->setFromNormalized(0.000000);
      value[ID::milli5]->setFromNormalized(0.000000);
      value[ID::milli6]->setFromNormalized(0.000000);
      value[ID::milli7]->setFromNormalized(0.000000);
      value[ID::overtone0]->setFromNormalized(1.000000);
      value[ID::overtone1]->setFromNormalized(0.849485);
      value[ID::overtone2]->setFromNormalized(0.761439);
      value[ID::overtone3]->setFromNormalized(0.698970);
      value[ID::overtone4]->setFromNormalized(0.650515);
      value[ID::overtone5]->setFromNormalized(0.610925);
      value[ID::overtone6]->setFromNormalized(0.577451);
      value[ID::overtone7]->setFromNormalized(0.548455);
      value[ID::overtone8]->setFromNormalized(0.522879);
      value[ID::overtone9]->setFromNormalized(0.500000);
      value[ID::overtone10]->setFromNormalized(0.479303);
      value[ID::overtone11]->setFromNormalized(0.460409);
      value[ID::overtone12]->setFromNormalized(0.443028);
      value[ID::overtone13]->setFromNormalized(0.426937);
      value[ID::overtone14]->setFromNormalized(0.411955);
      value[ID::overtone15]->setFromNormalized(0.397940);
      value[ID::chordGain0]->setFromNormalized(1.000000);
      value[ID::chordGain1]->setFromNormalized(1.000000);
      value[ID::chordGain2]->setFromNormalized(1.000000);
      value[ID::chordGain3]->setFromNormalized(1.000000);
      value[ID::chordSemi0]->setFromNormalized(0.000000);
      value[ID::chordSemi1]->setFromNormalized(0.200000);
      value[ID::chordSemi2]->setFromNormalized(0.641667);
      value[ID::chordSemi3]->setFromNormalized(0.641667);
      value[ID::chordMilli0]->setFromNormalized(0.000000);
      value[ID::chordMilli1]->setFromNormalized(0.000000);
      value[ID::chordMilli2]->setFromNormalized(0.000000);
      value[ID::chordMilli3]->setFromNormalized(0.276000);
      value[ID::chordPan0]->setFromNormalized(0.500000);
      value[ID::chordPan1]->setFromNormalized(0.500000);
      value[ID::chordPan2]->setFromNormalized(1.000000);
      value[ID::chordPan3]->setFromNormalized(0.000000);
      value[ID::nVoice]->setFromNormalized(1.000000);
      value[ID::smoothness]->setFromNormalized(0.100000);
      value[ID::pitchBend]->setFromNormalized(0.500000);
    } break;

    case presetET19: {
      value[ID::bypass]->setFromNormalized(0);
      value[ID::aliasing]->setFromNormalized(0.000000);
      value[ID::negativeSemi]->setFromNormalized(0.000000);
      value[ID::masterOctave]->setFromNormalized(0.500000);
      value[ID::equalTemperament]->setFromNormalized(0.304441);
      value[ID::pitchMultiply]->setFromNormalized(0.250000);
      value[ID::pitchModulo]->setFromNormalized(0.000000);
      value[ID::seed]->setFromNormalized(0.000000);
      value[ID::randomRetrigger]->setFromNormalized(0.000000);
      value[ID::randomGainAmount]->setFromNormalized(0.000000);
      value[ID::randomFrequencyAmount]->setFromNormalized(0.000000);
      value[ID::chorusMix]->setFromNormalized(0.308000);
      value[ID::chorusFrequency]->setFromNormalized(0.596000);
      value[ID::chorusDepth]->setFromNormalized(1.000000);
      value[ID::chorusDelayTimeRange0]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange1]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange2]->setFromNormalized(0.000000);
      value[ID::chorusMinDelayTime0]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime1]->setFromNormalized(0.364000);
      value[ID::chorusMinDelayTime2]->setFromNormalized(0.096000);
      value[ID::chorusPhase]->setFromNormalized(0.000000);
      value[ID::chorusOffset]->setFromNormalized(1.000000);
      value[ID::chorusFeedback]->setFromNormalized(0.232000);
      value[ID::chorusKeyFollow]->setFromNormalized(1.000000);
      value[ID::gain]->setFromNormalized(0.500000);
      value[ID::gainBoost]->setFromNormalized(0.184000);
      value[ID::gainA]->setFromNormalized(0.000000);
      value[ID::gainD]->setFromNormalized(0.176000);
      value[ID::gainS]->setFromNormalized(0.808000);
      value[ID::gainR]->setFromNormalized(0.176000);
      value[ID::gainEnvelopeCurve]->setFromNormalized(0.000000);
      value[ID::lowShelfPitch]->setFromNormalized(0.000000);
      value[ID::lowShelfGain]->setFromNormalized(0.500000);
      value[ID::highShelfPitch]->setFromNormalized(0.000000);
      value[ID::highShelfGain]->setFromNormalized(0.500000);
      value[ID::gain0]->setFromNormalized(1.000000);
      value[ID::gain1]->setFromNormalized(1.000000);
      value[ID::gain2]->setFromNormalized(0.718000);
      value[ID::gain3]->setFromNormalized(0.676000);
      value[ID::gain4]->setFromNormalized(0.588000);
      value[ID::gain5]->setFromNormalized(1.000000);
      value[ID::gain6]->setFromNormalized(0.386000);
      value[ID::gain7]->setFromNormalized(1.000000);
      value[ID::semi0]->setFromNormalized(0.000000);
      value[ID::semi1]->setFromNormalized(0.041667);
      value[ID::semi2]->setFromNormalized(0.225000);
      value[ID::semi3]->setFromNormalized(0.108333);
      value[ID::semi4]->setFromNormalized(0.200000);
      value[ID::semi5]->setFromNormalized(0.316667);
      value[ID::semi6]->setFromNormalized(0.475000);
      value[ID::semi7]->setFromNormalized(0.325000);
      value[ID::milli0]->setFromNormalized(0.000000);
      value[ID::milli1]->setFromNormalized(0.000000);
      value[ID::milli2]->setFromNormalized(0.000000);
      value[ID::milli3]->setFromNormalized(0.306000);
      value[ID::milli4]->setFromNormalized(0.000000);
      value[ID::milli5]->setFromNormalized(0.000000);
      value[ID::milli6]->setFromNormalized(0.000000);
      value[ID::milli7]->setFromNormalized(0.000000);
      value[ID::overtone0]->setFromNormalized(1.000000);
      value[ID::overtone1]->setFromNormalized(0.471429);
      value[ID::overtone2]->setFromNormalized(0.821429);
      value[ID::overtone3]->setFromNormalized(0.771429);
      value[ID::overtone4]->setFromNormalized(1.000000);
      value[ID::overtone5]->setFromNormalized(0.592857);
      value[ID::overtone6]->setFromNormalized(0.507143);
      value[ID::overtone7]->setFromNormalized(0.464286);
      value[ID::overtone8]->setFromNormalized(0.450000);
      value[ID::overtone9]->setFromNormalized(0.442857);
      value[ID::overtone10]->setFromNormalized(0.421429);
      value[ID::overtone11]->setFromNormalized(0.414286);
      value[ID::overtone12]->setFromNormalized(0.385714);
      value[ID::overtone13]->setFromNormalized(0.371429);
      value[ID::overtone14]->setFromNormalized(0.357143);
      value[ID::overtone15]->setFromNormalized(0.335714);
      value[ID::chordGain0]->setFromNormalized(1.000000);
      value[ID::chordGain1]->setFromNormalized(0.754000);
      value[ID::chordGain2]->setFromNormalized(1.000000);
      value[ID::chordGain3]->setFromNormalized(1.000000);
      value[ID::chordSemi0]->setFromNormalized(0.000000);
      value[ID::chordSemi1]->setFromNormalized(0.200000);
      value[ID::chordSemi2]->setFromNormalized(0.025000);
      value[ID::chordSemi3]->setFromNormalized(0.025000);
      value[ID::chordMilli0]->setFromNormalized(0.000000);
      value[ID::chordMilli1]->setFromNormalized(0.056000);
      value[ID::chordMilli2]->setFromNormalized(0.000000);
      value[ID::chordMilli3]->setFromNormalized(0.000000);
      value[ID::chordPan0]->setFromNormalized(0.500000);
      value[ID::chordPan1]->setFromNormalized(0.500000);
      value[ID::chordPan2]->setFromNormalized(1.000000);
      value[ID::chordPan3]->setFromNormalized(0.000000);
      value[ID::nVoice]->setFromNormalized(1.000000);
      value[ID::smoothness]->setFromNormalized(0.100000);
      value[ID::pitchBend]->setFromNormalized(0.500000);
    } break;

    case preset2479: {
      value[ID::bypass]->setFromNormalized(0);
      value[ID::aliasing]->setFromNormalized(0.000000);
      value[ID::negativeSemi]->setFromNormalized(0.000000);
      value[ID::masterOctave]->setFromNormalized(0.422000);
      value[ID::equalTemperament]->setFromNormalized(0.186441);
      value[ID::pitchMultiply]->setFromNormalized(0.250000);
      value[ID::pitchModulo]->setFromNormalized(0.000000);
      value[ID::seed]->setFromNormalized(0.000000);
      value[ID::randomRetrigger]->setFromNormalized(0.000000);
      value[ID::randomGainAmount]->setFromNormalized(1.000000);
      value[ID::randomFrequencyAmount]->setFromNormalized(0.000000);
      value[ID::chorusMix]->setFromNormalized(0.484000);
      value[ID::chorusFrequency]->setFromNormalized(0.514400);
      value[ID::chorusDepth]->setFromNormalized(0.752000);
      value[ID::chorusDelayTimeRange0]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange1]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange2]->setFromNormalized(0.000000);
      value[ID::chorusMinDelayTime0]->setFromNormalized(0.696000);
      value[ID::chorusMinDelayTime1]->setFromNormalized(1.000000);
      value[ID::chorusMinDelayTime2]->setFromNormalized(0.900000);
      value[ID::chorusPhase]->setFromNormalized(0.000000);
      value[ID::chorusOffset]->setFromNormalized(0.492000);
      value[ID::chorusFeedback]->setFromNormalized(0.700000);
      value[ID::chorusKeyFollow]->setFromNormalized(1.000000);
      value[ID::gain]->setFromNormalized(0.500000);
      value[ID::gainBoost]->setFromNormalized(0.000000);
      value[ID::gainA]->setFromNormalized(0.000000);
      value[ID::gainD]->setFromNormalized(0.500000);
      value[ID::gainS]->setFromNormalized(0.500000);
      value[ID::gainR]->setFromNormalized(0.004144);
      value[ID::gainEnvelopeCurve]->setFromNormalized(0.000000);
      value[ID::lowShelfPitch]->setFromNormalized(0.414000);
      value[ID::lowShelfGain]->setFromNormalized(0.800000);
      value[ID::highShelfPitch]->setFromNormalized(1.000000);
      value[ID::highShelfGain]->setFromNormalized(0.754000);
      value[ID::gain0]->setFromNormalized(1.000000);
      value[ID::gain1]->setFromNormalized(1.000000);
      value[ID::gain2]->setFromNormalized(1.000000);
      value[ID::gain3]->setFromNormalized(1.000000);
      value[ID::gain4]->setFromNormalized(1.000000);
      value[ID::gain5]->setFromNormalized(1.000000);
      value[ID::gain6]->setFromNormalized(1.000000);
      value[ID::gain7]->setFromNormalized(1.000000);
      value[ID::semi0]->setFromNormalized(0.000000);
      value[ID::semi1]->setFromNormalized(0.016667);
      value[ID::semi2]->setFromNormalized(0.033333);
      value[ID::semi3]->setFromNormalized(0.058333);
      value[ID::semi4]->setFromNormalized(0.075000);
      value[ID::semi5]->setFromNormalized(0.100000);
      value[ID::semi6]->setFromNormalized(0.091667);
      value[ID::semi7]->setFromNormalized(0.100000);
      value[ID::milli0]->setFromNormalized(0.000000);
      value[ID::milli1]->setFromNormalized(0.000000);
      value[ID::milli2]->setFromNormalized(0.000000);
      value[ID::milli3]->setFromNormalized(0.000000);
      value[ID::milli4]->setFromNormalized(0.000000);
      value[ID::milli5]->setFromNormalized(0.000000);
      value[ID::milli6]->setFromNormalized(0.592000);
      value[ID::milli7]->setFromNormalized(0.000000);
      value[ID::overtone0]->setFromNormalized(0.635714);
      value[ID::overtone1]->setFromNormalized(0.792857);
      value[ID::overtone2]->setFromNormalized(0.907143);
      value[ID::overtone3]->setFromNormalized(0.692857);
      value[ID::overtone4]->setFromNormalized(0.650000);
      value[ID::overtone5]->setFromNormalized(0.621429);
      value[ID::overtone6]->setFromNormalized(0.607143);
      value[ID::overtone7]->setFromNormalized(0.607143);
      value[ID::overtone8]->setFromNormalized(0.635714);
      value[ID::overtone9]->setFromNormalized(0.678571);
      value[ID::overtone10]->setFromNormalized(0.714286);
      value[ID::overtone11]->setFromNormalized(0.721429);
      value[ID::overtone12]->setFromNormalized(0.685714);
      value[ID::overtone13]->setFromNormalized(0.492857);
      value[ID::overtone14]->setFromNormalized(0.414286);
      value[ID::overtone15]->setFromNormalized(0.478571);
      value[ID::chordGain0]->setFromNormalized(1.000000);
      value[ID::chordGain1]->setFromNormalized(1.000000);
      value[ID::chordGain2]->setFromNormalized(1.000000);
      value[ID::chordGain3]->setFromNormalized(1.000000);
      value[ID::chordSemi0]->setFromNormalized(0.000000);
      value[ID::chordSemi1]->setFromNormalized(0.100000);
      value[ID::chordSemi2]->setFromNormalized(0.000000);
      value[ID::chordSemi3]->setFromNormalized(0.191667);
      value[ID::chordMilli0]->setFromNormalized(0.000000);
      value[ID::chordMilli1]->setFromNormalized(0.000000);
      value[ID::chordMilli2]->setFromNormalized(0.498000);
      value[ID::chordMilli3]->setFromNormalized(0.918000);
      value[ID::chordPan0]->setFromNormalized(1.000000);
      value[ID::chordPan1]->setFromNormalized(0.272000);
      value[ID::chordPan2]->setFromNormalized(0.000000);
      value[ID::chordPan3]->setFromNormalized(0.788000);
      value[ID::nVoice]->setFromNormalized(1.000000);
      value[ID::smoothness]->setFromNormalized(0.100000);
      value[ID::pitchBend]->setFromNormalized(0.500000);
    } break;

    case presetSparseOvertone: {
      value[ID::bypass]->setFromNormalized(0);
      value[ID::aliasing]->setFromNormalized(0.000000);
      value[ID::negativeSemi]->setFromNormalized(0.000000);
      value[ID::masterOctave]->setFromNormalized(0.375000);
      value[ID::equalTemperament]->setFromNormalized(0.186441);
      value[ID::pitchMultiply]->setFromNormalized(0.458000);
      value[ID::pitchModulo]->setFromNormalized(0.000000);
      value[ID::seed]->setFromNormalized(0.000000);
      value[ID::randomRetrigger]->setFromNormalized(0.000000);
      value[ID::randomGainAmount]->setFromNormalized(0.000000);
      value[ID::randomFrequencyAmount]->setFromNormalized(0.000000);
      value[ID::chorusMix]->setFromNormalized(0.000000);
      value[ID::chorusFrequency]->setFromNormalized(0.500000);
      value[ID::chorusDepth]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange0]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange1]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange2]->setFromNormalized(0.000000);
      value[ID::chorusMinDelayTime0]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime1]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime2]->setFromNormalized(0.500000);
      value[ID::chorusPhase]->setFromNormalized(0.000000);
      value[ID::chorusOffset]->setFromNormalized(0.000000);
      value[ID::chorusFeedback]->setFromNormalized(0.000000);
      value[ID::chorusKeyFollow]->setFromNormalized(1.000000);
      value[ID::gain]->setFromNormalized(0.500000);
      value[ID::gainBoost]->setFromNormalized(0.240000);
      value[ID::gainA]->setFromNormalized(0.000000);
      value[ID::gainD]->setFromNormalized(0.500000);
      value[ID::gainS]->setFromNormalized(0.500000);
      value[ID::gainR]->setFromNormalized(0.156000);
      value[ID::gainEnvelopeCurve]->setFromNormalized(0.000000);
      value[ID::lowShelfPitch]->setFromNormalized(0.590000);
      value[ID::lowShelfGain]->setFromNormalized(0.162000);
      value[ID::highShelfPitch]->setFromNormalized(0.000000);
      value[ID::highShelfGain]->setFromNormalized(0.500000);
      value[ID::gain0]->setFromNormalized(1.000000);
      value[ID::gain1]->setFromNormalized(1.000000);
      value[ID::gain2]->setFromNormalized(1.000000);
      value[ID::gain3]->setFromNormalized(1.000000);
      value[ID::gain4]->setFromNormalized(1.000000);
      value[ID::gain5]->setFromNormalized(1.000000);
      value[ID::gain6]->setFromNormalized(1.000000);
      value[ID::gain7]->setFromNormalized(1.000000);
      value[ID::semi0]->setFromNormalized(0.000000);
      value[ID::semi1]->setFromNormalized(0.183333);
      value[ID::semi2]->setFromNormalized(0.283333);
      value[ID::semi3]->setFromNormalized(0.158333);
      value[ID::semi4]->setFromNormalized(0.233333);
      value[ID::semi5]->setFromNormalized(0.041667);
      value[ID::semi6]->setFromNormalized(0.075000);
      value[ID::semi7]->setFromNormalized(0.083333);
      value[ID::milli0]->setFromNormalized(0.000000);
      value[ID::milli1]->setFromNormalized(0.000000);
      value[ID::milli2]->setFromNormalized(0.000000);
      value[ID::milli3]->setFromNormalized(0.000000);
      value[ID::milli4]->setFromNormalized(0.000000);
      value[ID::milli5]->setFromNormalized(0.000000);
      value[ID::milli6]->setFromNormalized(0.000000);
      value[ID::milli7]->setFromNormalized(0.000000);
      value[ID::overtone0]->setFromNormalized(0.807143);
      value[ID::overtone1]->setFromNormalized(0.000000);
      value[ID::overtone2]->setFromNormalized(0.000000);
      value[ID::overtone3]->setFromNormalized(1.000000);
      value[ID::overtone4]->setFromNormalized(0.000000);
      value[ID::overtone5]->setFromNormalized(0.000000);
      value[ID::overtone6]->setFromNormalized(0.000000);
      value[ID::overtone7]->setFromNormalized(0.000000);
      value[ID::overtone8]->setFromNormalized(0.000000);
      value[ID::overtone9]->setFromNormalized(0.000000);
      value[ID::overtone10]->setFromNormalized(0.000000);
      value[ID::overtone11]->setFromNormalized(0.785714);
      value[ID::overtone12]->setFromNormalized(0.000000);
      value[ID::overtone13]->setFromNormalized(0.000000);
      value[ID::overtone14]->setFromNormalized(0.000000);
      value[ID::overtone15]->setFromNormalized(0.542858);
      value[ID::chordGain0]->setFromNormalized(1.000000);
      value[ID::chordGain1]->setFromNormalized(1.000000);
      value[ID::chordGain2]->setFromNormalized(1.000000);
      value[ID::chordGain3]->setFromNormalized(1.000000);
      value[ID::chordSemi0]->setFromNormalized(0.000000);
      value[ID::chordSemi1]->setFromNormalized(0.058333);
      value[ID::chordSemi2]->setFromNormalized(0.116667);
      value[ID::chordSemi3]->setFromNormalized(0.175000);
      value[ID::chordMilli0]->setFromNormalized(0.000000);
      value[ID::chordMilli1]->setFromNormalized(0.000000);
      value[ID::chordMilli2]->setFromNormalized(0.000000);
      value[ID::chordMilli3]->setFromNormalized(0.000000);
      value[ID::chordPan0]->setFromNormalized(0.500000);
      value[ID::chordPan1]->setFromNormalized(0.500000);
      value[ID::chordPan2]->setFromNormalized(0.500000);
      value[ID::chordPan3]->setFromNormalized(0.500000);
      value[ID::nVoice]->setFromNormalized(1.000000);
      value[ID::smoothness]->setFromNormalized(0.100000);
      value[ID::pitchBend]->setFromNormalized(0.500000);
    } break;

    case preset4thPad: {
      value[ID::bypass]->setFromNormalized(0);
      value[ID::aliasing]->setFromNormalized(0.000000);
      value[ID::negativeSemi]->setFromNormalized(0.000000);
      value[ID::masterOctave]->setFromNormalized(0.382000);
      value[ID::equalTemperament]->setFromNormalized(0.186441);
      value[ID::pitchMultiply]->setFromNormalized(0.250000);
      value[ID::pitchModulo]->setFromNormalized(0.000000);
      value[ID::seed]->setFromNormalized(0.000000);
      value[ID::randomRetrigger]->setFromNormalized(0.000000);
      value[ID::randomGainAmount]->setFromNormalized(0.500000);
      value[ID::randomFrequencyAmount]->setFromNormalized(0.156000);
      value[ID::chorusMix]->setFromNormalized(0.664000);
      value[ID::chorusFrequency]->setFromNormalized(0.684000);
      value[ID::chorusDepth]->setFromNormalized(0.576000);
      value[ID::chorusDelayTimeRange0]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange1]->setFromNormalized(0.332000);
      value[ID::chorusDelayTimeRange2]->setFromNormalized(0.232000);
      value[ID::chorusMinDelayTime0]->setFromNormalized(0.732000);
      value[ID::chorusMinDelayTime1]->setFromNormalized(0.324000);
      value[ID::chorusMinDelayTime2]->setFromNormalized(0.500000);
      value[ID::chorusPhase]->setFromNormalized(0.000000);
      value[ID::chorusOffset]->setFromNormalized(1.000000);
      value[ID::chorusFeedback]->setFromNormalized(0.464000);
      value[ID::chorusKeyFollow]->setFromNormalized(0.000000);
      value[ID::gain]->setFromNormalized(0.500000);
      value[ID::gainBoost]->setFromNormalized(0.184000);
      value[ID::gainA]->setFromNormalized(0.628000);
      value[ID::gainD]->setFromNormalized(0.844000);
      value[ID::gainS]->setFromNormalized(0.904000);
      value[ID::gainR]->setFromNormalized(0.684144);
      value[ID::gainEnvelopeCurve]->setFromNormalized(0.832000);
      value[ID::lowShelfPitch]->setFromNormalized(0.000000);
      value[ID::lowShelfGain]->setFromNormalized(0.500000);
      value[ID::highShelfPitch]->setFromNormalized(0.718000);
      value[ID::highShelfGain]->setFromNormalized(0.232000);
      value[ID::gain0]->setFromNormalized(1.000000);
      value[ID::gain1]->setFromNormalized(1.000000);
      value[ID::gain2]->setFromNormalized(1.000000);
      value[ID::gain3]->setFromNormalized(1.000000);
      value[ID::gain4]->setFromNormalized(0.662000);
      value[ID::gain5]->setFromNormalized(0.522000);
      value[ID::gain6]->setFromNormalized(0.614000);
      value[ID::gain7]->setFromNormalized(1.000000);
      value[ID::semi0]->setFromNormalized(0.000000);
      value[ID::semi1]->setFromNormalized(0.033333);
      value[ID::semi2]->setFromNormalized(0.000000);
      value[ID::semi3]->setFromNormalized(0.000000);
      value[ID::semi4]->setFromNormalized(0.116667);
      value[ID::semi5]->setFromNormalized(0.158333);
      value[ID::semi6]->setFromNormalized(0.200000);
      value[ID::semi7]->setFromNormalized(0.058333);
      value[ID::milli0]->setFromNormalized(0.000000);
      value[ID::milli1]->setFromNormalized(0.286000);
      value[ID::milli2]->setFromNormalized(0.502000);
      value[ID::milli3]->setFromNormalized(0.370000);
      value[ID::milli4]->setFromNormalized(0.000000);
      value[ID::milli5]->setFromNormalized(0.000000);
      value[ID::milli6]->setFromNormalized(0.000000);
      value[ID::milli7]->setFromNormalized(0.000000);
      value[ID::overtone0]->setFromNormalized(0.564286);
      value[ID::overtone1]->setFromNormalized(0.885714);
      value[ID::overtone2]->setFromNormalized(0.892857);
      value[ID::overtone3]->setFromNormalized(0.864286);
      value[ID::overtone4]->setFromNormalized(0.435714);
      value[ID::overtone5]->setFromNormalized(0.357143);
      value[ID::overtone6]->setFromNormalized(0.528571);
      value[ID::overtone7]->setFromNormalized(0.764286);
      value[ID::overtone8]->setFromNormalized(0.835714);
      value[ID::overtone9]->setFromNormalized(0.485714);
      value[ID::overtone10]->setFromNormalized(0.300000);
      value[ID::overtone11]->setFromNormalized(0.607143);
      value[ID::overtone12]->setFromNormalized(0.900000);
      value[ID::overtone13]->setFromNormalized(0.735714);
      value[ID::overtone14]->setFromNormalized(0.471429);
      value[ID::overtone15]->setFromNormalized(0.392857);
      value[ID::chordGain0]->setFromNormalized(1.000000);
      value[ID::chordGain1]->setFromNormalized(1.000000);
      value[ID::chordGain2]->setFromNormalized(1.000000);
      value[ID::chordGain3]->setFromNormalized(1.000000);
      value[ID::chordSemi0]->setFromNormalized(0.000000);
      value[ID::chordSemi1]->setFromNormalized(0.000000);
      value[ID::chordSemi2]->setFromNormalized(0.033333);
      value[ID::chordSemi3]->setFromNormalized(0.000000);
      value[ID::chordMilli0]->setFromNormalized(0.000000);
      value[ID::chordMilli1]->setFromNormalized(0.000000);
      value[ID::chordMilli2]->setFromNormalized(0.792000);
      value[ID::chordMilli3]->setFromNormalized(0.000000);
      value[ID::chordPan0]->setFromNormalized(0.000000);
      value[ID::chordPan1]->setFromNormalized(0.500000);
      value[ID::chordPan2]->setFromNormalized(0.500000);
      value[ID::chordPan3]->setFromNormalized(1.000000);
      value[ID::nVoice]->setFromNormalized(1.000000);
      value[ID::smoothness]->setFromNormalized(0.100000);
      value[ID::pitchBend]->setFromNormalized(0.500000);
    } break;

    case presetAliasing: {
      value[ID::bypass]->setFromNormalized(0);
      value[ID::aliasing]->setFromNormalized(1.000000);
      value[ID::negativeSemi]->setFromNormalized(0.000000);
      value[ID::masterOctave]->setFromNormalized(0.374000);
      value[ID::equalTemperament]->setFromNormalized(0.186441);
      value[ID::pitchMultiply]->setFromNormalized(0.096200);
      value[ID::pitchModulo]->setFromNormalized(0.000200);
      value[ID::seed]->setFromNormalized(0.000000);
      value[ID::randomRetrigger]->setFromNormalized(0.000000);
      value[ID::randomGainAmount]->setFromNormalized(0.000000);
      value[ID::randomFrequencyAmount]->setFromNormalized(0.000000);
      value[ID::chorusMix]->setFromNormalized(0.000000);
      value[ID::chorusFrequency]->setFromNormalized(0.500000);
      value[ID::chorusDepth]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange0]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange1]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange2]->setFromNormalized(0.000000);
      value[ID::chorusMinDelayTime0]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime1]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime2]->setFromNormalized(0.500000);
      value[ID::chorusPhase]->setFromNormalized(0.000000);
      value[ID::chorusOffset]->setFromNormalized(0.000000);
      value[ID::chorusFeedback]->setFromNormalized(0.000000);
      value[ID::chorusKeyFollow]->setFromNormalized(1.000000);
      value[ID::gain]->setFromNormalized(0.500000);
      value[ID::gainBoost]->setFromNormalized(0.000000);
      value[ID::gainA]->setFromNormalized(0.000000);
      value[ID::gainD]->setFromNormalized(0.500000);
      value[ID::gainS]->setFromNormalized(0.500000);
      value[ID::gainR]->setFromNormalized(0.000144);
      value[ID::gainEnvelopeCurve]->setFromNormalized(0.000000);
      value[ID::lowShelfPitch]->setFromNormalized(0.000000);
      value[ID::lowShelfGain]->setFromNormalized(0.500000);
      value[ID::highShelfPitch]->setFromNormalized(0.000000);
      value[ID::highShelfGain]->setFromNormalized(0.500000);
      value[ID::gain0]->setFromNormalized(1.000000);
      value[ID::gain1]->setFromNormalized(1.000000);
      value[ID::gain2]->setFromNormalized(1.000000);
      value[ID::gain3]->setFromNormalized(1.000000);
      value[ID::gain4]->setFromNormalized(1.000000);
      value[ID::gain5]->setFromNormalized(1.000000);
      value[ID::gain6]->setFromNormalized(1.000000);
      value[ID::gain7]->setFromNormalized(1.000000);
      value[ID::semi0]->setFromNormalized(0.000000);
      value[ID::semi1]->setFromNormalized(0.166667);
      value[ID::semi2]->setFromNormalized(0.408333);
      value[ID::semi3]->setFromNormalized(0.466667);
      value[ID::semi4]->setFromNormalized(0.566667);
      value[ID::semi5]->setFromNormalized(0.716667);
      value[ID::semi6]->setFromNormalized(0.625000);
      value[ID::semi7]->setFromNormalized(0.616667);
      value[ID::milli0]->setFromNormalized(0.000000);
      value[ID::milli1]->setFromNormalized(0.000000);
      value[ID::milli2]->setFromNormalized(0.000000);
      value[ID::milli3]->setFromNormalized(0.000000);
      value[ID::milli4]->setFromNormalized(0.000000);
      value[ID::milli5]->setFromNormalized(0.000000);
      value[ID::milli6]->setFromNormalized(0.000000);
      value[ID::milli7]->setFromNormalized(0.000000);
      value[ID::overtone0]->setFromNormalized(1.000000);
      value[ID::overtone1]->setFromNormalized(0.000000);
      value[ID::overtone2]->setFromNormalized(0.000000);
      value[ID::overtone3]->setFromNormalized(0.000000);
      value[ID::overtone4]->setFromNormalized(0.000000);
      value[ID::overtone5]->setFromNormalized(0.000000);
      value[ID::overtone6]->setFromNormalized(0.000000);
      value[ID::overtone7]->setFromNormalized(0.000000);
      value[ID::overtone8]->setFromNormalized(0.000000);
      value[ID::overtone9]->setFromNormalized(0.000000);
      value[ID::overtone10]->setFromNormalized(0.000000);
      value[ID::overtone11]->setFromNormalized(0.000000);
      value[ID::overtone12]->setFromNormalized(0.000000);
      value[ID::overtone13]->setFromNormalized(0.000000);
      value[ID::overtone14]->setFromNormalized(0.000000);
      value[ID::overtone15]->setFromNormalized(0.000000);
      value[ID::chordGain0]->setFromNormalized(1.000000);
      value[ID::chordGain1]->setFromNormalized(1.000000);
      value[ID::chordGain2]->setFromNormalized(1.000000);
      value[ID::chordGain3]->setFromNormalized(1.000000);
      value[ID::chordSemi0]->setFromNormalized(1.000000);
      value[ID::chordSemi1]->setFromNormalized(0.800000);
      value[ID::chordSemi2]->setFromNormalized(1.000000);
      value[ID::chordSemi3]->setFromNormalized(1.000000);
      value[ID::chordMilli0]->setFromNormalized(0.000000);
      value[ID::chordMilli1]->setFromNormalized(0.000000);
      value[ID::chordMilli2]->setFromNormalized(0.568000);
      value[ID::chordMilli3]->setFromNormalized(0.088000);
      value[ID::chordPan0]->setFromNormalized(0.500000);
      value[ID::chordPan1]->setFromNormalized(0.500000);
      value[ID::chordPan2]->setFromNormalized(0.500000);
      value[ID::chordPan3]->setFromNormalized(0.500000);
      value[ID::nVoice]->setFromNormalized(1.000000);
      value[ID::smoothness]->setFromNormalized(0.100000);
      value[ID::pitchBend]->setFromNormalized(0.500000);
    } break;

    case presetNoisyFeedback: {
      value[ID::bypass]->setFromNormalized(0);
      value[ID::aliasing]->setFromNormalized(0.000000);
      value[ID::negativeSemi]->setFromNormalized(0.000000);
      value[ID::masterOctave]->setFromNormalized(0.500000);
      value[ID::equalTemperament]->setFromNormalized(0.312441);
      value[ID::pitchMultiply]->setFromNormalized(0.250000);
      value[ID::pitchModulo]->setFromNormalized(0.410000);
      value[ID::seed]->setFromNormalized(0.000000);
      value[ID::randomRetrigger]->setFromNormalized(0.000000);
      value[ID::randomGainAmount]->setFromNormalized(0.684000);
      value[ID::randomFrequencyAmount]->setFromNormalized(0.456000);
      value[ID::chorusMix]->setFromNormalized(0.668000);
      value[ID::chorusFrequency]->setFromNormalized(0.868000);
      value[ID::chorusDepth]->setFromNormalized(0.900000);
      value[ID::chorusDelayTimeRange0]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange1]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange2]->setFromNormalized(0.000000);
      value[ID::chorusMinDelayTime0]->setFromNormalized(0.492800);
      value[ID::chorusMinDelayTime1]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime2]->setFromNormalized(0.519200);
      value[ID::chorusPhase]->setFromNormalized(0.000000);
      value[ID::chorusOffset]->setFromNormalized(1.000000);
      value[ID::chorusFeedback]->setFromNormalized(0.944000);
      value[ID::chorusKeyFollow]->setFromNormalized(1.000000);
      value[ID::gain]->setFromNormalized(0.500000);
      value[ID::gainBoost]->setFromNormalized(0.000000);
      value[ID::gainA]->setFromNormalized(0.000000);
      value[ID::gainD]->setFromNormalized(0.472000);
      value[ID::gainS]->setFromNormalized(0.228000);
      value[ID::gainR]->setFromNormalized(0.716000);
      value[ID::gainEnvelopeCurve]->setFromNormalized(0.000000);
      value[ID::lowShelfPitch]->setFromNormalized(0.438000);
      value[ID::lowShelfGain]->setFromNormalized(0.866000);
      value[ID::highShelfPitch]->setFromNormalized(0.858000);
      value[ID::highShelfGain]->setFromNormalized(0.188000);
      value[ID::gain0]->setFromNormalized(1.000000);
      value[ID::gain1]->setFromNormalized(1.000000);
      value[ID::gain2]->setFromNormalized(1.000000);
      value[ID::gain3]->setFromNormalized(1.000000);
      value[ID::gain4]->setFromNormalized(1.000000);
      value[ID::gain5]->setFromNormalized(1.000000);
      value[ID::gain6]->setFromNormalized(1.000000);
      value[ID::gain7]->setFromNormalized(1.000000);
      value[ID::semi0]->setFromNormalized(0.000000);
      value[ID::semi1]->setFromNormalized(0.300000);
      value[ID::semi2]->setFromNormalized(0.300000);
      value[ID::semi3]->setFromNormalized(0.508333);
      value[ID::semi4]->setFromNormalized(0.700000);
      value[ID::semi5]->setFromNormalized(0.000000);
      value[ID::semi6]->setFromNormalized(0.000000);
      value[ID::semi7]->setFromNormalized(0.000000);
      value[ID::milli0]->setFromNormalized(0.000000);
      value[ID::milli1]->setFromNormalized(0.000000);
      value[ID::milli2]->setFromNormalized(0.472000);
      value[ID::milli3]->setFromNormalized(0.000000);
      value[ID::milli4]->setFromNormalized(0.000000);
      value[ID::milli5]->setFromNormalized(0.784000);
      value[ID::milli6]->setFromNormalized(0.362000);
      value[ID::milli7]->setFromNormalized(0.066000);
      value[ID::overtone0]->setFromNormalized(1.000000);
      value[ID::overtone1]->setFromNormalized(0.992857);
      value[ID::overtone2]->setFromNormalized(1.000000);
      value[ID::overtone3]->setFromNormalized(1.000000);
      value[ID::overtone4]->setFromNormalized(0.564286);
      value[ID::overtone5]->setFromNormalized(0.578571);
      value[ID::overtone6]->setFromNormalized(0.585714);
      value[ID::overtone7]->setFromNormalized(0.578571);
      value[ID::overtone8]->setFromNormalized(0.378571);
      value[ID::overtone9]->setFromNormalized(0.371429);
      value[ID::overtone10]->setFromNormalized(0.364286);
      value[ID::overtone11]->setFromNormalized(0.364286);
      value[ID::overtone12]->setFromNormalized(0.121429);
      value[ID::overtone13]->setFromNormalized(0.121429);
      value[ID::overtone14]->setFromNormalized(0.121429);
      value[ID::overtone15]->setFromNormalized(0.121429);
      value[ID::chordGain0]->setFromNormalized(1.000000);
      value[ID::chordGain1]->setFromNormalized(1.000000);
      value[ID::chordGain2]->setFromNormalized(1.000000);
      value[ID::chordGain3]->setFromNormalized(1.000000);
      value[ID::chordSemi0]->setFromNormalized(0.000000);
      value[ID::chordSemi1]->setFromNormalized(0.100000);
      value[ID::chordSemi2]->setFromNormalized(0.000000);
      value[ID::chordSemi3]->setFromNormalized(0.000000);
      value[ID::chordMilli0]->setFromNormalized(0.000000);
      value[ID::chordMilli1]->setFromNormalized(0.000000);
      value[ID::chordMilli2]->setFromNormalized(0.246000);
      value[ID::chordMilli3]->setFromNormalized(0.428000);
      value[ID::chordPan0]->setFromNormalized(0.500000);
      value[ID::chordPan1]->setFromNormalized(0.500000);
      value[ID::chordPan2]->setFromNormalized(0.000000);
      value[ID::chordPan3]->setFromNormalized(1.000000);
      value[ID::nVoice]->setFromNormalized(1.000000);
      value[ID::smoothness]->setFromNormalized(0.304000);
      value[ID::pitchBend]->setFromNormalized(0.500000);
    } break;

    case presetTotallyRandom: {
      value[ID::bypass]->setFromNormalized(0);
      value[ID::aliasing]->setFromNormalized(0.000000);
      value[ID::negativeSemi]->setFromNormalized(0.000000);
      value[ID::masterOctave]->setFromNormalized(0.264000);
      value[ID::equalTemperament]->setFromNormalized(0.186441);
      value[ID::pitchMultiply]->setFromNormalized(0.250000);
      value[ID::pitchModulo]->setFromNormalized(1.000000);
      value[ID::seed]->setFromNormalized(0.321400);
      value[ID::randomRetrigger]->setFromNormalized(1.000000);
      value[ID::randomGainAmount]->setFromNormalized(1.000000);
      value[ID::randomFrequencyAmount]->setFromNormalized(1.000000);
      value[ID::chorusMix]->setFromNormalized(0.000000);
      value[ID::chorusFrequency]->setFromNormalized(0.500000);
      value[ID::chorusDepth]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange0]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange1]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange2]->setFromNormalized(0.000000);
      value[ID::chorusMinDelayTime0]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime1]->setFromNormalized(0.756000);
      value[ID::chorusMinDelayTime2]->setFromNormalized(0.564000);
      value[ID::chorusPhase]->setFromNormalized(0.000000);
      value[ID::chorusOffset]->setFromNormalized(0.000000);
      value[ID::chorusFeedback]->setFromNormalized(0.928000);
      value[ID::chorusKeyFollow]->setFromNormalized(1.000000);
      value[ID::gain]->setFromNormalized(0.500000);
      value[ID::gainBoost]->setFromNormalized(0.000000);
      value[ID::gainA]->setFromNormalized(0.000000);
      value[ID::gainD]->setFromNormalized(0.564000);
      value[ID::gainS]->setFromNormalized(0.000000);
      value[ID::gainR]->setFromNormalized(0.576144);
      value[ID::gainEnvelopeCurve]->setFromNormalized(0.000000);
      value[ID::lowShelfPitch]->setFromNormalized(0.000000);
      value[ID::lowShelfGain]->setFromNormalized(0.500000);
      value[ID::highShelfPitch]->setFromNormalized(0.000000);
      value[ID::highShelfGain]->setFromNormalized(0.500000);
      value[ID::gain0]->setFromNormalized(1.000000);
      value[ID::gain1]->setFromNormalized(1.000000);
      value[ID::gain2]->setFromNormalized(1.000000);
      value[ID::gain3]->setFromNormalized(1.000000);
      value[ID::gain4]->setFromNormalized(1.000000);
      value[ID::gain5]->setFromNormalized(1.000000);
      value[ID::gain6]->setFromNormalized(1.000000);
      value[ID::gain7]->setFromNormalized(1.000000);
      value[ID::semi0]->setFromNormalized(0.000000);
      value[ID::semi1]->setFromNormalized(0.000000);
      value[ID::semi2]->setFromNormalized(0.000000);
      value[ID::semi3]->setFromNormalized(0.000000);
      value[ID::semi4]->setFromNormalized(0.000000);
      value[ID::semi5]->setFromNormalized(0.000000);
      value[ID::semi6]->setFromNormalized(0.000000);
      value[ID::semi7]->setFromNormalized(0.000000);
      value[ID::milli0]->setFromNormalized(0.000000);
      value[ID::milli1]->setFromNormalized(0.000000);
      value[ID::milli2]->setFromNormalized(0.000000);
      value[ID::milli3]->setFromNormalized(0.000000);
      value[ID::milli4]->setFromNormalized(0.000000);
      value[ID::milli5]->setFromNormalized(0.000000);
      value[ID::milli6]->setFromNormalized(0.000000);
      value[ID::milli7]->setFromNormalized(0.000000);
      value[ID::overtone0]->setFromNormalized(1.000000);
      value[ID::overtone1]->setFromNormalized(0.964286);
      value[ID::overtone2]->setFromNormalized(0.928571);
      value[ID::overtone3]->setFromNormalized(0.892857);
      value[ID::overtone4]->setFromNormalized(0.864286);
      value[ID::overtone5]->setFromNormalized(0.842857);
      value[ID::overtone6]->setFromNormalized(0.814286);
      value[ID::overtone7]->setFromNormalized(0.785714);
      value[ID::overtone8]->setFromNormalized(0.757143);
      value[ID::overtone9]->setFromNormalized(0.728571);
      value[ID::overtone10]->setFromNormalized(0.692857);
      value[ID::overtone11]->setFromNormalized(0.678571);
      value[ID::overtone12]->setFromNormalized(0.650000);
      value[ID::overtone13]->setFromNormalized(0.621429);
      value[ID::overtone14]->setFromNormalized(0.592857);
      value[ID::overtone15]->setFromNormalized(0.564286);
      value[ID::chordGain0]->setFromNormalized(1.000000);
      value[ID::chordGain1]->setFromNormalized(1.000000);
      value[ID::chordGain2]->setFromNormalized(1.000000);
      value[ID::chordGain3]->setFromNormalized(1.000000);
      value[ID::chordSemi0]->setFromNormalized(0.316667);
      value[ID::chordSemi1]->setFromNormalized(0.350000);
      value[ID::chordSemi2]->setFromNormalized(0.300000);
      value[ID::chordSemi3]->setFromNormalized(0.400000);
      value[ID::chordMilli0]->setFromNormalized(0.000000);
      value[ID::chordMilli1]->setFromNormalized(0.000000);
      value[ID::chordMilli2]->setFromNormalized(0.000000);
      value[ID::chordMilli3]->setFromNormalized(0.000000);
      value[ID::chordPan0]->setFromNormalized(1.000000);
      value[ID::chordPan1]->setFromNormalized(0.000000);
      value[ID::chordPan2]->setFromNormalized(0.500000);
      value[ID::chordPan3]->setFromNormalized(0.500000);
      value[ID::nVoice]->setFromNormalized(1.000000);
      value[ID::smoothness]->setFromNormalized(0.100000);
      value[ID::pitchBend]->setFromNormalized(0.500000);
    } break;

    case presetET12ToneCluster: {
      value[ID::bypass]->setFromNormalized(0);
      value[ID::aliasing]->setFromNormalized(0.000000);
      value[ID::negativeSemi]->setFromNormalized(0.000000);
      value[ID::masterOctave]->setFromNormalized(0.500000);
      value[ID::equalTemperament]->setFromNormalized(0.188000);
      value[ID::pitchMultiply]->setFromNormalized(0.250000);
      value[ID::pitchModulo]->setFromNormalized(0.000000);
      value[ID::seed]->setFromNormalized(0.000000);
      value[ID::randomRetrigger]->setFromNormalized(0.000000);
      value[ID::randomGainAmount]->setFromNormalized(0.000000);
      value[ID::randomFrequencyAmount]->setFromNormalized(0.000000);
      value[ID::chorusMix]->setFromNormalized(0.000000);
      value[ID::chorusFrequency]->setFromNormalized(0.500000);
      value[ID::chorusDepth]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange0]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange1]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange2]->setFromNormalized(0.000000);
      value[ID::chorusMinDelayTime0]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime1]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime2]->setFromNormalized(0.500000);
      value[ID::chorusPhase]->setFromNormalized(0.000000);
      value[ID::chorusOffset]->setFromNormalized(0.000000);
      value[ID::chorusFeedback]->setFromNormalized(0.000000);
      value[ID::chorusKeyFollow]->setFromNormalized(1.000000);
      value[ID::gain]->setFromNormalized(0.500000);
      value[ID::gainBoost]->setFromNormalized(0.000000);
      value[ID::gainA]->setFromNormalized(0.000000);
      value[ID::gainD]->setFromNormalized(0.500000);
      value[ID::gainS]->setFromNormalized(0.500000);
      value[ID::gainR]->setFromNormalized(0.000144);
      value[ID::gainEnvelopeCurve]->setFromNormalized(0.000000);
      value[ID::lowShelfPitch]->setFromNormalized(0.000000);
      value[ID::lowShelfGain]->setFromNormalized(0.500000);
      value[ID::highShelfPitch]->setFromNormalized(0.000000);
      value[ID::highShelfGain]->setFromNormalized(0.500000);
      value[ID::gain0]->setFromNormalized(1.000000);
      value[ID::gain1]->setFromNormalized(1.000000);
      value[ID::gain2]->setFromNormalized(1.000000);
      value[ID::gain3]->setFromNormalized(1.000000);
      value[ID::gain4]->setFromNormalized(1.000000);
      value[ID::gain5]->setFromNormalized(1.000000);
      value[ID::gain6]->setFromNormalized(1.000000);
      value[ID::gain7]->setFromNormalized(1.000000);
      value[ID::semi0]->setFromNormalized(0.000000);
      value[ID::semi1]->setFromNormalized(0.008333);
      value[ID::semi2]->setFromNormalized(0.016667);
      value[ID::semi3]->setFromNormalized(0.025000);
      value[ID::semi4]->setFromNormalized(0.033333);
      value[ID::semi5]->setFromNormalized(0.041667);
      value[ID::semi6]->setFromNormalized(0.050000);
      value[ID::semi7]->setFromNormalized(0.058333);
      value[ID::milli0]->setFromNormalized(0.000000);
      value[ID::milli1]->setFromNormalized(0.000000);
      value[ID::milli2]->setFromNormalized(0.000000);
      value[ID::milli3]->setFromNormalized(0.000000);
      value[ID::milli4]->setFromNormalized(0.000000);
      value[ID::milli5]->setFromNormalized(0.000000);
      value[ID::milli6]->setFromNormalized(0.000000);
      value[ID::milli7]->setFromNormalized(0.000000);
      value[ID::overtone0]->setFromNormalized(1.000000);
      value[ID::overtone1]->setFromNormalized(1.000000);
      value[ID::overtone2]->setFromNormalized(1.000000);
      value[ID::overtone3]->setFromNormalized(1.000000);
      value[ID::overtone4]->setFromNormalized(1.000000);
      value[ID::overtone5]->setFromNormalized(1.000000);
      value[ID::overtone6]->setFromNormalized(1.000000);
      value[ID::overtone7]->setFromNormalized(1.000000);
      value[ID::overtone8]->setFromNormalized(1.000000);
      value[ID::overtone9]->setFromNormalized(1.000000);
      value[ID::overtone10]->setFromNormalized(1.000000);
      value[ID::overtone11]->setFromNormalized(1.000000);
      value[ID::overtone12]->setFromNormalized(1.000000);
      value[ID::overtone13]->setFromNormalized(1.000000);
      value[ID::overtone14]->setFromNormalized(1.000000);
      value[ID::overtone15]->setFromNormalized(1.000000);
      value[ID::chordGain0]->setFromNormalized(1.000000);
      value[ID::chordGain1]->setFromNormalized(1.000000);
      value[ID::chordGain2]->setFromNormalized(1.000000);
      value[ID::chordGain3]->setFromNormalized(1.000000);
      value[ID::chordSemi0]->setFromNormalized(0.000000);
      value[ID::chordSemi1]->setFromNormalized(0.066667);
      value[ID::chordSemi2]->setFromNormalized(0.133333);
      value[ID::chordSemi3]->setFromNormalized(0.200000);
      value[ID::chordMilli0]->setFromNormalized(0.000000);
      value[ID::chordMilli1]->setFromNormalized(0.000000);
      value[ID::chordMilli2]->setFromNormalized(0.000000);
      value[ID::chordMilli3]->setFromNormalized(0.000000);
      value[ID::chordPan0]->setFromNormalized(0.500000);
      value[ID::chordPan1]->setFromNormalized(0.500000);
      value[ID::chordPan2]->setFromNormalized(0.500000);
      value[ID::chordPan3]->setFromNormalized(0.500000);
      value[ID::nVoice]->setFromNormalized(1.000000);
      value[ID::smoothness]->setFromNormalized(0.100000);
      value[ID::pitchBend]->setFromNormalized(0.500000);
    } break;

    case presetSlowRotation: {
      value[ID::bypass]->setFromNormalized(0);
      value[ID::aliasing]->setFromNormalized(0.000000);
      value[ID::negativeSemi]->setFromNormalized(0.000000);
      value[ID::masterOctave]->setFromNormalized(0.500000);
      value[ID::equalTemperament]->setFromNormalized(0.180441);
      value[ID::pitchMultiply]->setFromNormalized(0.250000);
      value[ID::pitchModulo]->setFromNormalized(0.000000);
      value[ID::seed]->setFromNormalized(0.000000);
      value[ID::randomRetrigger]->setFromNormalized(0.000000);
      value[ID::randomGainAmount]->setFromNormalized(0.368000);
      value[ID::randomFrequencyAmount]->setFromNormalized(0.164000);
      value[ID::chorusMix]->setFromNormalized(1.000000);
      value[ID::chorusFrequency]->setFromNormalized(0.493600);
      value[ID::chorusDepth]->setFromNormalized(1.000000);
      value[ID::chorusDelayTimeRange0]->setFromNormalized(0.316000);
      value[ID::chorusDelayTimeRange1]->setFromNormalized(0.540000);
      value[ID::chorusDelayTimeRange2]->setFromNormalized(0.224000);
      value[ID::chorusMinDelayTime0]->setFromNormalized(0.796000);
      value[ID::chorusMinDelayTime1]->setFromNormalized(0.684000);
      value[ID::chorusMinDelayTime2]->setFromNormalized(0.752000);
      value[ID::chorusPhase]->setFromNormalized(0.000000);
      value[ID::chorusOffset]->setFromNormalized(0.296000);
      value[ID::chorusFeedback]->setFromNormalized(0.672000);
      value[ID::chorusKeyFollow]->setFromNormalized(0.000000);
      value[ID::gain]->setFromNormalized(0.500000);
      value[ID::gainBoost]->setFromNormalized(0.364000);
      value[ID::gainA]->setFromNormalized(0.404000);
      value[ID::gainD]->setFromNormalized(0.864000);
      value[ID::gainS]->setFromNormalized(1.000000);
      value[ID::gainR]->setFromNormalized(0.644000);
      value[ID::gainEnvelopeCurve]->setFromNormalized(0.720000);
      value[ID::lowShelfPitch]->setFromNormalized(0.000000);
      value[ID::lowShelfGain]->setFromNormalized(0.500000);
      value[ID::highShelfPitch]->setFromNormalized(0.676000);
      value[ID::highShelfGain]->setFromNormalized(0.326000);
      value[ID::gain0]->setFromNormalized(1.000000);
      value[ID::gain1]->setFromNormalized(1.000000);
      value[ID::gain2]->setFromNormalized(0.778000);
      value[ID::gain3]->setFromNormalized(0.926000);
      value[ID::gain4]->setFromNormalized(1.000000);
      value[ID::gain5]->setFromNormalized(1.000000);
      value[ID::gain6]->setFromNormalized(1.000000);
      value[ID::gain7]->setFromNormalized(0.830000);
      value[ID::semi0]->setFromNormalized(0.000000);
      value[ID::semi1]->setFromNormalized(0.041667);
      value[ID::semi2]->setFromNormalized(0.158333);
      value[ID::semi3]->setFromNormalized(0.133333);
      value[ID::semi4]->setFromNormalized(0.058333);
      value[ID::semi5]->setFromNormalized(0.000000);
      value[ID::semi6]->setFromNormalized(0.000000);
      value[ID::semi7]->setFromNormalized(0.300000);
      value[ID::milli0]->setFromNormalized(0.000000);
      value[ID::milli1]->setFromNormalized(0.136000);
      value[ID::milli2]->setFromNormalized(0.254000);
      value[ID::milli3]->setFromNormalized(0.460000);
      value[ID::milli4]->setFromNormalized(0.190000);
      value[ID::milli5]->setFromNormalized(0.586000);
      value[ID::milli6]->setFromNormalized(0.296000);
      value[ID::milli7]->setFromNormalized(0.798000);
      value[ID::overtone0]->setFromNormalized(0.621429);
      value[ID::overtone1]->setFromNormalized(0.771429);
      value[ID::overtone2]->setFromNormalized(0.907143);
      value[ID::overtone3]->setFromNormalized(0.850000);
      value[ID::overtone4]->setFromNormalized(0.514286);
      value[ID::overtone5]->setFromNormalized(0.421429);
      value[ID::overtone6]->setFromNormalized(0.407143);
      value[ID::overtone7]->setFromNormalized(0.478571);
      value[ID::overtone8]->setFromNormalized(0.542857);
      value[ID::overtone9]->setFromNormalized(0.685714);
      value[ID::overtone10]->setFromNormalized(0.714286);
      value[ID::overtone11]->setFromNormalized(0.550000);
      value[ID::overtone12]->setFromNormalized(0.407143);
      value[ID::overtone13]->setFromNormalized(0.271429);
      value[ID::overtone14]->setFromNormalized(0.185714);
      value[ID::overtone15]->setFromNormalized(0.150000);
      value[ID::chordGain0]->setFromNormalized(1.000000);
      value[ID::chordGain1]->setFromNormalized(0.876000);
      value[ID::chordGain2]->setFromNormalized(0.974000);
      value[ID::chordGain3]->setFromNormalized(0.942000);
      value[ID::chordSemi0]->setFromNormalized(0.000000);
      value[ID::chordSemi1]->setFromNormalized(0.100000);
      value[ID::chordSemi2]->setFromNormalized(0.116667);
      value[ID::chordSemi3]->setFromNormalized(0.058333);
      value[ID::chordMilli0]->setFromNormalized(0.000000);
      value[ID::chordMilli1]->setFromNormalized(0.000000);
      value[ID::chordMilli2]->setFromNormalized(0.000000);
      value[ID::chordMilli3]->setFromNormalized(0.286000);
      value[ID::chordPan0]->setFromNormalized(0.500000);
      value[ID::chordPan1]->setFromNormalized(0.288000);
      value[ID::chordPan2]->setFromNormalized(0.712000);
      value[ID::chordPan3]->setFromNormalized(0.500000);
      value[ID::nVoice]->setFromNormalized(1.000000);
      value[ID::smoothness]->setFromNormalized(0.100000);
      value[ID::pitchBend]->setFromNormalized(0.500000);
    } break;

    case presetAnotherPad: {
      value[ID::bypass]->setFromNormalized(0);
      value[ID::aliasing]->setFromNormalized(0.000000);
      value[ID::negativeSemi]->setFromNormalized(0.000000);
      value[ID::masterOctave]->setFromNormalized(0.500000);
      value[ID::equalTemperament]->setFromNormalized(0.192441);
      value[ID::pitchMultiply]->setFromNormalized(0.125000);
      value[ID::pitchModulo]->setFromNormalized(0.000000);
      value[ID::seed]->setFromNormalized(0.000000);
      value[ID::randomRetrigger]->setFromNormalized(0.000000);
      value[ID::randomGainAmount]->setFromNormalized(0.000000);
      value[ID::randomFrequencyAmount]->setFromNormalized(0.272000);
      value[ID::chorusMix]->setFromNormalized(0.404000);
      value[ID::chorusFrequency]->setFromNormalized(0.416000);
      value[ID::chorusDepth]->setFromNormalized(1.000000);
      value[ID::chorusDelayTimeRange0]->setFromNormalized(0.060000);
      value[ID::chorusDelayTimeRange1]->setFromNormalized(0.156000);
      value[ID::chorusDelayTimeRange2]->setFromNormalized(0.136000);
      value[ID::chorusMinDelayTime0]->setFromNormalized(0.316000);
      value[ID::chorusMinDelayTime1]->setFromNormalized(0.212000);
      value[ID::chorusMinDelayTime2]->setFromNormalized(0.136000);
      value[ID::chorusPhase]->setFromNormalized(0.000000);
      value[ID::chorusOffset]->setFromNormalized(1.000000);
      value[ID::chorusFeedback]->setFromNormalized(0.712000);
      value[ID::chorusKeyFollow]->setFromNormalized(0.000000);
      value[ID::gain]->setFromNormalized(0.500000);
      value[ID::gainBoost]->setFromNormalized(0.368000);
      value[ID::gainA]->setFromNormalized(0.460000);
      value[ID::gainD]->setFromNormalized(0.500000);
      value[ID::gainS]->setFromNormalized(1.000000);
      value[ID::gainR]->setFromNormalized(0.720000);
      value[ID::gainEnvelopeCurve]->setFromNormalized(0.656000);
      value[ID::lowShelfPitch]->setFromNormalized(0.000000);
      value[ID::lowShelfGain]->setFromNormalized(0.500000);
      value[ID::highShelfPitch]->setFromNormalized(0.574000);
      value[ID::highShelfGain]->setFromNormalized(0.356000);
      value[ID::gain0]->setFromNormalized(1.000000);
      value[ID::gain1]->setFromNormalized(0.792000);
      value[ID::gain2]->setFromNormalized(1.000000);
      value[ID::gain3]->setFromNormalized(1.000000);
      value[ID::gain4]->setFromNormalized(1.000000);
      value[ID::gain5]->setFromNormalized(0.708000);
      value[ID::gain6]->setFromNormalized(0.872000);
      value[ID::gain7]->setFromNormalized(0.826000);
      value[ID::semi0]->setFromNormalized(0.000000);
      value[ID::semi1]->setFromNormalized(0.000000);
      value[ID::semi2]->setFromNormalized(0.050000);
      value[ID::semi3]->setFromNormalized(0.058333);
      value[ID::semi4]->setFromNormalized(0.058333);
      value[ID::semi5]->setFromNormalized(0.141667);
      value[ID::semi6]->setFromNormalized(0.000000);
      value[ID::semi7]->setFromNormalized(0.000000);
      value[ID::milli0]->setFromNormalized(0.000000);
      value[ID::milli1]->setFromNormalized(0.176000);
      value[ID::milli2]->setFromNormalized(0.946000);
      value[ID::milli3]->setFromNormalized(0.000000);
      value[ID::milli4]->setFromNormalized(0.190000);
      value[ID::milli5]->setFromNormalized(0.000000);
      value[ID::milli6]->setFromNormalized(0.192000);
      value[ID::milli7]->setFromNormalized(0.012000);
      value[ID::overtone0]->setFromNormalized(0.721429);
      value[ID::overtone1]->setFromNormalized(0.357143);
      value[ID::overtone2]->setFromNormalized(0.592857);
      value[ID::overtone3]->setFromNormalized(0.664286);
      value[ID::overtone4]->setFromNormalized(0.328571);
      value[ID::overtone5]->setFromNormalized(0.164286);
      value[ID::overtone6]->setFromNormalized(0.114286);
      value[ID::overtone7]->setFromNormalized(0.114286);
      value[ID::overtone8]->setFromNormalized(0.114286);
      value[ID::overtone9]->setFromNormalized(0.150000);
      value[ID::overtone10]->setFromNormalized(0.307143);
      value[ID::overtone11]->setFromNormalized(0.557143);
      value[ID::overtone12]->setFromNormalized(0.721429);
      value[ID::overtone13]->setFromNormalized(0.621429);
      value[ID::overtone14]->setFromNormalized(0.357143);
      value[ID::overtone15]->setFromNormalized(0.200000);
      value[ID::chordGain0]->setFromNormalized(1.000000);
      value[ID::chordGain1]->setFromNormalized(0.824000);
      value[ID::chordGain2]->setFromNormalized(0.974000);
      value[ID::chordGain3]->setFromNormalized(0.756000);
      value[ID::chordSemi0]->setFromNormalized(0.000000);
      value[ID::chordSemi1]->setFromNormalized(0.200000);
      value[ID::chordSemi2]->setFromNormalized(0.000000);
      value[ID::chordSemi3]->setFromNormalized(0.100000);
      value[ID::chordMilli0]->setFromNormalized(0.000000);
      value[ID::chordMilli1]->setFromNormalized(0.418000);
      value[ID::chordMilli2]->setFromNormalized(0.000000);
      value[ID::chordMilli3]->setFromNormalized(0.000000);
      value[ID::chordPan0]->setFromNormalized(0.000000);
      value[ID::chordPan1]->setFromNormalized(0.672000);
      value[ID::chordPan2]->setFromNormalized(1.000000);
      value[ID::chordPan3]->setFromNormalized(0.288000);
      value[ID::nVoice]->setFromNormalized(1.000000);
      value[ID::smoothness]->setFromNormalized(0.100000);
      value[ID::pitchBend]->setFromNormalized(0.500000);
    } break;

    case presetSolidHighBlurredLow: {
      value[ID::bypass]->setFromNormalized(0);
      value[ID::aliasing]->setFromNormalized(0.000000);
      value[ID::negativeSemi]->setFromNormalized(0.000000);
      value[ID::masterOctave]->setFromNormalized(0.500000);
      value[ID::equalTemperament]->setFromNormalized(0.186441);
      value[ID::pitchMultiply]->setFromNormalized(0.270000);
      value[ID::pitchModulo]->setFromNormalized(0.000000);
      value[ID::seed]->setFromNormalized(0.000000);
      value[ID::randomRetrigger]->setFromNormalized(0.000000);
      value[ID::randomGainAmount]->setFromNormalized(0.308000);
      value[ID::randomFrequencyAmount]->setFromNormalized(0.000000);
      value[ID::chorusMix]->setFromNormalized(0.056000);
      value[ID::chorusFrequency]->setFromNormalized(0.924000);
      value[ID::chorusDepth]->setFromNormalized(0.624000);
      value[ID::chorusDelayTimeRange0]->setFromNormalized(0.364000);
      value[ID::chorusDelayTimeRange1]->setFromNormalized(0.304000);
      value[ID::chorusDelayTimeRange2]->setFromNormalized(0.456000);
      value[ID::chorusMinDelayTime0]->setFromNormalized(0.260000);
      value[ID::chorusMinDelayTime1]->setFromNormalized(0.204000);
      value[ID::chorusMinDelayTime2]->setFromNormalized(0.088000);
      value[ID::chorusPhase]->setFromNormalized(0.000000);
      value[ID::chorusOffset]->setFromNormalized(1.000000);
      value[ID::chorusFeedback]->setFromNormalized(0.908000);
      value[ID::chorusKeyFollow]->setFromNormalized(0.000000);
      value[ID::gain]->setFromNormalized(0.500000);
      value[ID::gainBoost]->setFromNormalized(0.000000);
      value[ID::gainA]->setFromNormalized(0.148000);
      value[ID::gainD]->setFromNormalized(0.500000);
      value[ID::gainS]->setFromNormalized(0.500000);
      value[ID::gainR]->setFromNormalized(0.804000);
      value[ID::gainEnvelopeCurve]->setFromNormalized(0.000000);
      value[ID::lowShelfPitch]->setFromNormalized(0.000000);
      value[ID::lowShelfGain]->setFromNormalized(0.500000);
      value[ID::highShelfPitch]->setFromNormalized(0.000000);
      value[ID::highShelfGain]->setFromNormalized(0.500000);
      value[ID::gain0]->setFromNormalized(1.000000);
      value[ID::gain1]->setFromNormalized(1.000000);
      value[ID::gain2]->setFromNormalized(1.000000);
      value[ID::gain3]->setFromNormalized(1.000000);
      value[ID::gain4]->setFromNormalized(1.000000);
      value[ID::gain5]->setFromNormalized(1.000000);
      value[ID::gain6]->setFromNormalized(1.000000);
      value[ID::gain7]->setFromNormalized(1.000000);
      value[ID::semi0]->setFromNormalized(0.000000);
      value[ID::semi1]->setFromNormalized(0.100000);
      value[ID::semi2]->setFromNormalized(0.200000);
      value[ID::semi3]->setFromNormalized(0.300000);
      value[ID::semi4]->setFromNormalized(0.000000);
      value[ID::semi5]->setFromNormalized(0.100000);
      value[ID::semi6]->setFromNormalized(0.200000);
      value[ID::semi7]->setFromNormalized(0.300000);
      value[ID::milli0]->setFromNormalized(0.000000);
      value[ID::milli1]->setFromNormalized(0.000000);
      value[ID::milli2]->setFromNormalized(0.000000);
      value[ID::milli3]->setFromNormalized(0.000000);
      value[ID::milli4]->setFromNormalized(0.333000);
      value[ID::milli5]->setFromNormalized(0.222000);
      value[ID::milli6]->setFromNormalized(0.111000);
      value[ID::milli7]->setFromNormalized(0.000000);
      value[ID::overtone0]->setFromNormalized(1.000000);
      value[ID::overtone1]->setFromNormalized(0.385714);
      value[ID::overtone2]->setFromNormalized(0.450000);
      value[ID::overtone3]->setFromNormalized(0.535714);
      value[ID::overtone4]->setFromNormalized(0.707143);
      value[ID::overtone5]->setFromNormalized(0.878571);
      value[ID::overtone6]->setFromNormalized(0.214286);
      value[ID::overtone7]->setFromNormalized(0.271429);
      value[ID::overtone8]->setFromNormalized(0.421429);
      value[ID::overtone9]->setFromNormalized(0.750000);
      value[ID::overtone10]->setFromNormalized(0.314286);
      value[ID::overtone11]->setFromNormalized(0.371429);
      value[ID::overtone12]->setFromNormalized(0.700000);
      value[ID::overtone13]->setFromNormalized(0.200000);
      value[ID::overtone14]->setFromNormalized(0.242857);
      value[ID::overtone15]->setFromNormalized(0.621429);
      value[ID::chordGain0]->setFromNormalized(1.000000);
      value[ID::chordGain1]->setFromNormalized(1.000000);
      value[ID::chordGain2]->setFromNormalized(1.000000);
      value[ID::chordGain3]->setFromNormalized(1.000000);
      value[ID::chordSemi0]->setFromNormalized(0.000000);
      value[ID::chordSemi1]->setFromNormalized(0.016667);
      value[ID::chordSemi2]->setFromNormalized(0.033333);
      value[ID::chordSemi3]->setFromNormalized(0.058333);
      value[ID::chordMilli0]->setFromNormalized(0.000000);
      value[ID::chordMilli1]->setFromNormalized(0.000000);
      value[ID::chordMilli2]->setFromNormalized(0.000000);
      value[ID::chordMilli3]->setFromNormalized(0.000000);
      value[ID::chordPan0]->setFromNormalized(0.500000);
      value[ID::chordPan1]->setFromNormalized(0.500000);
      value[ID::chordPan2]->setFromNormalized(0.500000);
      value[ID::chordPan3]->setFromNormalized(0.496000);
      value[ID::nVoice]->setFromNormalized(1.000000);
      value[ID::smoothness]->setFromNormalized(0.100000);
      value[ID::pitchBend]->setFromNormalized(0.500000);
    } break;

    case presetThisSynthIsNotGoodForBass: {
      value[ID::bypass]->setFromNormalized(0);
      value[ID::aliasing]->setFromNormalized(0.000000);
      value[ID::negativeSemi]->setFromNormalized(0.000000);
      value[ID::masterOctave]->setFromNormalized(0.308000);
      value[ID::equalTemperament]->setFromNormalized(0.186441);
      value[ID::pitchMultiply]->setFromNormalized(0.294000);
      value[ID::pitchModulo]->setFromNormalized(0.000000);
      value[ID::seed]->setFromNormalized(0.000000);
      value[ID::randomRetrigger]->setFromNormalized(0.000000);
      value[ID::randomGainAmount]->setFromNormalized(0.000000);
      value[ID::randomFrequencyAmount]->setFromNormalized(0.020000);
      value[ID::chorusMix]->setFromNormalized(1.000000);
      value[ID::chorusFrequency]->setFromNormalized(0.500000);
      value[ID::chorusDepth]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange0]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange1]->setFromNormalized(0.000000);
      value[ID::chorusDelayTimeRange2]->setFromNormalized(0.000000);
      value[ID::chorusMinDelayTime0]->setFromNormalized(0.500000);
      value[ID::chorusMinDelayTime1]->setFromNormalized(0.276000);
      value[ID::chorusMinDelayTime2]->setFromNormalized(0.392000);
      value[ID::chorusPhase]->setFromNormalized(0.000000);
      value[ID::chorusOffset]->setFromNormalized(0.000000);
      value[ID::chorusFeedback]->setFromNormalized(0.820000);
      value[ID::chorusKeyFollow]->setFromNormalized(1.000000);
      value[ID::gain]->setFromNormalized(0.240000);
      value[ID::gainBoost]->setFromNormalized(0.000000);
      value[ID::gainA]->setFromNormalized(0.000000);
      value[ID::gainD]->setFromNormalized(0.712000);
      value[ID::gainS]->setFromNormalized(0.728000);
      value[ID::gainR]->setFromNormalized(0.400000);
      value[ID::gainEnvelopeCurve]->setFromNormalized(0.000000);
      value[ID::lowShelfPitch]->setFromNormalized(0.564000);
      value[ID::lowShelfGain]->setFromNormalized(0.784000);
      value[ID::highShelfPitch]->setFromNormalized(0.782000);
      value[ID::highShelfGain]->setFromNormalized(0.306000);
      value[ID::gain0]->setFromNormalized(1.000000);
      value[ID::gain1]->setFromNormalized(0.780000);
      value[ID::gain2]->setFromNormalized(0.768000);
      value[ID::gain3]->setFromNormalized(0.734000);
      value[ID::gain4]->setFromNormalized(0.580000);
      value[ID::gain5]->setFromNormalized(1.000000);
      value[ID::gain6]->setFromNormalized(1.000000);
      value[ID::gain7]->setFromNormalized(1.000000);
      value[ID::semi0]->setFromNormalized(0.000000);
      value[ID::semi1]->setFromNormalized(0.100000);
      value[ID::semi2]->setFromNormalized(0.058333);
      value[ID::semi3]->setFromNormalized(0.200000);
      value[ID::semi4]->setFromNormalized(0.158333);
      value[ID::semi5]->setFromNormalized(0.000000);
      value[ID::semi6]->setFromNormalized(0.000000);
      value[ID::semi7]->setFromNormalized(0.000000);
      value[ID::milli0]->setFromNormalized(0.000000);
      value[ID::milli1]->setFromNormalized(0.184000);
      value[ID::milli2]->setFromNormalized(0.194000);
      value[ID::milli3]->setFromNormalized(0.000000);
      value[ID::milli4]->setFromNormalized(0.434000);
      value[ID::milli5]->setFromNormalized(0.000000);
      value[ID::milli6]->setFromNormalized(0.000000);
      value[ID::milli7]->setFromNormalized(0.000000);
      value[ID::overtone0]->setFromNormalized(1.000000);
      value[ID::overtone1]->setFromNormalized(0.685714);
      value[ID::overtone2]->setFromNormalized(0.907143);
      value[ID::overtone3]->setFromNormalized(0.514286);
      value[ID::overtone4]->setFromNormalized(0.307143);
      value[ID::overtone5]->setFromNormalized(0.185714);
      value[ID::overtone6]->setFromNormalized(0.071429);
      value[ID::overtone7]->setFromNormalized(0.042857);
      value[ID::overtone8]->setFromNormalized(0.057143);
      value[ID::overtone9]->setFromNormalized(0.135714);
      value[ID::overtone10]->setFromNormalized(0.621429);
      value[ID::overtone11]->setFromNormalized(0.550000);
      value[ID::overtone12]->setFromNormalized(0.457143);
      value[ID::overtone13]->setFromNormalized(0.385714);
      value[ID::overtone14]->setFromNormalized(0.357143);
      value[ID::overtone15]->setFromNormalized(0.314286);
      value[ID::chordGain0]->setFromNormalized(1.000000);
      value[ID::chordGain1]->setFromNormalized(1.000000);
      value[ID::chordGain2]->setFromNormalized(0.954000);
      value[ID::chordGain3]->setFromNormalized(1.000000);
      value[ID::chordSemi0]->setFromNormalized(0.000000);
      value[ID::chordSemi1]->setFromNormalized(0.100000);
      value[ID::chordSemi2]->setFromNormalized(0.000000);
      value[ID::chordSemi3]->setFromNormalized(0.050000);
      value[ID::chordMilli0]->setFromNormalized(0.000000);
      value[ID::chordMilli1]->setFromNormalized(0.198000);
      value[ID::chordMilli2]->setFromNormalized(0.000000);
      value[ID::chordMilli3]->setFromNormalized(0.396000);
      value[ID::chordPan0]->setFromNormalized(0.500000);
      value[ID::chordPan1]->setFromNormalized(0.500000);
      value[ID::chordPan2]->setFromNormalized(0.500000);
      value[ID::chordPan3]->setFromNormalized(0.500000);
      value[ID::nVoice]->setFromNormalized(1.000000);
      value[ID::smoothness]->setFromNormalized(0.100000);
      value[ID::pitchBend]->setFromNormalized(0.500000);
    } break;
  }
}
